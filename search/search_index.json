{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Bem vindo a nossa documenta\u00e7\u00e3o! Essa documenta\u00e7\u00e3o foi inteiramente escrita em mkdocs! Para visitar como ela funciona, voc\u00ea pode visitar essa doc! mkdocs.org . Commandos para rodar essa documenta\u00e7\u00e3o localmente mkdocs serve - Inicia o projeto na sua m\u00e1quina mkdocs build - Constroi a documenta\u00e7\u00e3o mkdocs -h - Devolve comandos de ajuda O que voc\u00ea vai encontrar nessa documenta\u00e7\u00e3o? Backend Git e github. Como voc\u00ea pode puxar atualiza\u00e7\u00f5es e commitar no local correto? Como fazer o pull request no local correto. Como se fosse a primeira vez: configurando upstream Depois de ter branch s-01 criada! Configura\u00e7\u00f5es do projeto. Como consigo rodar esse projeto na minha m\u00e1quina? Virtualenvs Instale o pyenv Frontend Wireframe e fluxos do produto Metodol\u00f3gias \u00e1geis - scrum O documento que regeu o manifesto \u00e1gil possui 12 princ\u00edpios. Leia sempre que tiver d\u00favida se a equipe ou voc\u00ea est\u00e1 indo bem! Maior prioridade A satisfa\u00e7\u00e3o do cliente somados as entregas parciais e cont\u00ednuas do software, de forma adianta e com valor agredado. N\u00e3o h\u00e1 foco em documenta\u00e7\u00f5es r\u00edgidas, e sim na itera\u00e7\u00e3o constante com o cliente. Mudan\u00e7as s\u00e3o bem vindas. O in\u00edcio do desenvolvimento de software \u00e9 dificil identificar todos os requisitos. O software precisa amadurecer e o cliente muitas vezes n\u00e3o consegue prever todas as suas necessidades antes de ter uma vers\u00e3o funcional do software. O m\u00e9todo \u00e1gil adota a filosofia de que mudan\u00e7as feitas mais tarde no processo n\u00e3o s\u00e3o prejudiciais. Al\u00e9m dissotodas as mudan\u00e7as que contribuem para a melhoria do software dentro das necessidades do cliente s\u00e3o bem-vindas. Entregas frequentes As entregas devem ser frequentes, de funcionalidades que estejam us\u00e1veis no ideal do MVP (m\u00ednimo produto vi\u00e1vel).Periodicidade de tempo de entregas r\u00e1pidas d\u00e3o um ritmo ao trabalho da equipe de desenvolvimento. Atrasos de entrega constantem den\u00fanciam a fal\u00eancia dos prazos. Equipe \u00fanica de neg\u00f3cios e desenvolvedores Um dos princ\u00edpios da abordagem \u00e1gil \u00e9 ter uma equipe \u00fanica de neg\u00f3cios e desenvolvedores, pois o trabalho conjunto das pessoas de neg\u00f3cio com os desenvolvedores \u00e9 importante para manter a mesma comunica\u00e7\u00e3o durante todo o projeto. Portanto, PO e SM codam tamb\u00e9m. Motiva\u00e7\u00e3o Equipe motivada \u00e9 sinal de qualidade no proeto. \u00c9 necess\u00e1rio que haja uma confian\u00e7a na equipe para o desenvolvimento do trabalho que precisa ser realizado. Na abordagem \u00e1gil as equipes \u00e1geis s\u00e3o autogerenciadas, com uma comunica\u00e7\u00e3o direta e constante com feedbacks frequentes com o comprometimento de todos os envolvidos para a entrega. Conversa frente a frente. Um dos princ\u00edpios do manifesto \u00e1gil \u00e9 a conversa frente a frente, face a face, presencial. \u00c9 um m\u00e9todo eficiente e eficaz para a transmiss\u00e3o de qualquer informa\u00e7\u00e3o para a equipe e entre as equipes de desenvolvimento do software.. Os feedbacks devem ser diretos e na cara. Software Funcional \u00c9 preciso garantir enregas ao fim da sprint. Um dos princ\u00edpios do manifesto \u00e1gil \u00e9 a entrega de um software funcional em v\u00e1rias etapas at\u00e9 a entrega do projeto final do software que est\u00e1 sendo desenvolvido. Desenvolvimento sustent\u00e1vel Para garantir um desenvolvimento sustent\u00e1vel no m\u00e9todo \u00e1gil, \u00e9 importante evitar a produtividade por horas de trabalho, o que cansa o desenvolvedor, por\u00e9m, valorizando a produtividade pela capacidade criativa na execu\u00e7\u00e3o. Agilidade \u00c9 importante direcionar a aten\u00e7\u00e3o \u00e0s necessidades de mudan\u00e7a e evitar documenta\u00e7\u00f5es extensas. Simplicidade Cria\u00e7\u00e3o e a entrega de um software de qualidade que resolve as necessidades do cliente. Isso \u00e9 realmente essencial? \u00c9 poss\u00edvel torn\u00e1-lo simples? As respostas de perguntas como essas direcionam o desenvolvimento do software para a sua simplicidade. Times Auto Organiz\u00e1veis Buscar por um conjunto restrito e muito simples de regras que deve ser obedecido por todos os membros da equipe. Reflex\u00f5es regulares Compreender o processo em que est\u00e1 o desenvolvimento do software, assim como velocidade e dinamismo da equipe e cada um dos seus membros. Em conversas francas e din\u00e2micas de grupo.","title":"Home"},{"location":"#bem-vindo-a-nossa-documentacao","text":"Essa documenta\u00e7\u00e3o foi inteiramente escrita em mkdocs! Para visitar como ela funciona, voc\u00ea pode visitar essa doc! mkdocs.org .","title":"Bem vindo a nossa documenta\u00e7\u00e3o!"},{"location":"#commandos-para-rodar-essa-documentacao-localmente","text":"mkdocs serve - Inicia o projeto na sua m\u00e1quina mkdocs build - Constroi a documenta\u00e7\u00e3o mkdocs -h - Devolve comandos de ajuda","title":"Commandos para rodar essa documenta\u00e7\u00e3o localmente"},{"location":"#o-que-voce-vai-encontrar-nessa-documentacao","text":"","title":"O que voc\u00ea vai encontrar nessa documenta\u00e7\u00e3o?"},{"location":"#backend","text":"Git e github. Como voc\u00ea pode puxar atualiza\u00e7\u00f5es e commitar no local correto? Como fazer o pull request no local correto. Como se fosse a primeira vez: configurando upstream Depois de ter branch s-01 criada! Configura\u00e7\u00f5es do projeto. Como consigo rodar esse projeto na minha m\u00e1quina? Virtualenvs Instale o pyenv","title":"Backend"},{"location":"#frontend","text":"Wireframe e fluxos do produto","title":"Frontend"},{"location":"#metodologias-ageis-scrum","text":"O documento que regeu o manifesto \u00e1gil possui 12 princ\u00edpios. Leia sempre que tiver d\u00favida se a equipe ou voc\u00ea est\u00e1 indo bem! Maior prioridade A satisfa\u00e7\u00e3o do cliente somados as entregas parciais e cont\u00ednuas do software, de forma adianta e com valor agredado. N\u00e3o h\u00e1 foco em documenta\u00e7\u00f5es r\u00edgidas, e sim na itera\u00e7\u00e3o constante com o cliente. Mudan\u00e7as s\u00e3o bem vindas. O in\u00edcio do desenvolvimento de software \u00e9 dificil identificar todos os requisitos. O software precisa amadurecer e o cliente muitas vezes n\u00e3o consegue prever todas as suas necessidades antes de ter uma vers\u00e3o funcional do software. O m\u00e9todo \u00e1gil adota a filosofia de que mudan\u00e7as feitas mais tarde no processo n\u00e3o s\u00e3o prejudiciais. Al\u00e9m dissotodas as mudan\u00e7as que contribuem para a melhoria do software dentro das necessidades do cliente s\u00e3o bem-vindas. Entregas frequentes As entregas devem ser frequentes, de funcionalidades que estejam us\u00e1veis no ideal do MVP (m\u00ednimo produto vi\u00e1vel).Periodicidade de tempo de entregas r\u00e1pidas d\u00e3o um ritmo ao trabalho da equipe de desenvolvimento. Atrasos de entrega constantem den\u00fanciam a fal\u00eancia dos prazos. Equipe \u00fanica de neg\u00f3cios e desenvolvedores Um dos princ\u00edpios da abordagem \u00e1gil \u00e9 ter uma equipe \u00fanica de neg\u00f3cios e desenvolvedores, pois o trabalho conjunto das pessoas de neg\u00f3cio com os desenvolvedores \u00e9 importante para manter a mesma comunica\u00e7\u00e3o durante todo o projeto. Portanto, PO e SM codam tamb\u00e9m. Motiva\u00e7\u00e3o Equipe motivada \u00e9 sinal de qualidade no proeto. \u00c9 necess\u00e1rio que haja uma confian\u00e7a na equipe para o desenvolvimento do trabalho que precisa ser realizado. Na abordagem \u00e1gil as equipes \u00e1geis s\u00e3o autogerenciadas, com uma comunica\u00e7\u00e3o direta e constante com feedbacks frequentes com o comprometimento de todos os envolvidos para a entrega. Conversa frente a frente. Um dos princ\u00edpios do manifesto \u00e1gil \u00e9 a conversa frente a frente, face a face, presencial. \u00c9 um m\u00e9todo eficiente e eficaz para a transmiss\u00e3o de qualquer informa\u00e7\u00e3o para a equipe e entre as equipes de desenvolvimento do software.. Os feedbacks devem ser diretos e na cara. Software Funcional \u00c9 preciso garantir enregas ao fim da sprint. Um dos princ\u00edpios do manifesto \u00e1gil \u00e9 a entrega de um software funcional em v\u00e1rias etapas at\u00e9 a entrega do projeto final do software que est\u00e1 sendo desenvolvido. Desenvolvimento sustent\u00e1vel Para garantir um desenvolvimento sustent\u00e1vel no m\u00e9todo \u00e1gil, \u00e9 importante evitar a produtividade por horas de trabalho, o que cansa o desenvolvedor, por\u00e9m, valorizando a produtividade pela capacidade criativa na execu\u00e7\u00e3o. Agilidade \u00c9 importante direcionar a aten\u00e7\u00e3o \u00e0s necessidades de mudan\u00e7a e evitar documenta\u00e7\u00f5es extensas. Simplicidade Cria\u00e7\u00e3o e a entrega de um software de qualidade que resolve as necessidades do cliente. Isso \u00e9 realmente essencial? \u00c9 poss\u00edvel torn\u00e1-lo simples? As respostas de perguntas como essas direcionam o desenvolvimento do software para a sua simplicidade. Times Auto Organiz\u00e1veis Buscar por um conjunto restrito e muito simples de regras que deve ser obedecido por todos os membros da equipe. Reflex\u00f5es regulares Compreender o processo em que est\u00e1 o desenvolvimento do software, assim como velocidade e dinamismo da equipe e cada um dos seus membros. Em conversas francas e din\u00e2micas de grupo.","title":"Metodol\u00f3gias \u00e1geis - scrum"},{"location":"backend/","text":"Backend WGSI O que significa o WGSI? Significa We're Gonna Solve It! Esse ser\u00e1 o nome do nosso protocolinho para comunica\u00e7\u00e3o com servidor! Na verdade, o nome do arquivo deveria ser WSGI, um padr\u00e3o (protocolo) de interface de comunica\u00e7\u00e3o da aplica\u00e7\u00e3o python e o servidor web proposto pela PEP 333 . S\u00f3 que na hora do sono, acabamos digitando WGSI, ao inv\u00e9s de WSGI, e bem, Apesar do Vamos resolver isso! N\u00f3s n\u00e3o vamos resolver isso. Oficialmente, nosso protocolinho de comunica\u00e7\u00e3o com servidor ser\u00e1 conhecido como \"WGSI\", que, \u00e9 claro, ainda significa \"We're Gonna Solve It!\" (Vamos Resolver Isso!). Contudo, vamos apenas deixar assim, est\u00e1 bem? Mas procurem por WSGI! O PEP 333 diz que como tudo come\u00e7a! Tudo precisa come\u00e7ar com uma fun\u00e7\u00e3o (um cham\u00e1vel) que recebe um dicion\u00e1rio com vari\u00e1veis de ambiente e uma outra fun\u00e7\u00e3o. Ela ser\u00e1 respons\u00e1vel pela primeira comunica\u00e7\u00e3o com a web. A nossa fun\u00e7\u00e3o recebe o nome de \"retorna_response(environ, start_response)\". Ao executar o comando 'python3 wgsi.py', server deixa dispon\u00edvel na porta 8080 o acesso para nosso backend. Quando algu\u00e9m acessar essa porta, ent\u00e3o ser\u00e1 executado o retorna_response , terceiro par\u00e2metro da fun\u00e7\u00e3o make_server(). A fun\u00e7\u00e3o retorna_response() \u00e9 a fun\u00e7\u00e3o principal de um servidor WSGI. Ela recebe uma solicita\u00e7\u00e3o do navegador (atrav\u00e9s do par\u00e2metro environ) e retorna uma resposta (atrav\u00e9s do par\u00e2metro start_response). O primeiro passo da fun\u00e7\u00e3o \u00e9 criar uma inst\u00e2ncia de HTTPRequest a partir do dicion\u00e1rio environ. O objeto HTTPRequest representa a solicita\u00e7\u00e3o do navegador. Ele cont\u00e9m informa\u00e7\u00f5es como o m\u00e9todo HTTP, os cabe\u00e7alhos, a URL, os par\u00e2metros de consulta e outras informa\u00e7\u00f5es relacionadas \u00e0 solicita\u00e7\u00e3o. Em seguida, a fun\u00e7\u00e3o chama a fun\u00e7\u00e3o url_match() para encontrar qual view (fun\u00e7\u00e3o que recebe um request e responde um response) deve ser executada para atender \u00e0 solicita\u00e7\u00e3o. A fun\u00e7\u00e3o url_match() recebe a URL da solicita\u00e7\u00e3o como par\u00e2metro (request.path). Se a fun\u00e7\u00e3o url_match() retornar uma fun\u00e7\u00e3o view, a fun\u00e7\u00e3o retorna_response() chama a fun\u00e7\u00e3o view com o objeto HTTPRequest como par\u00e2metro. A fun\u00e7\u00e3o view \u00e9 respons\u00e1vel por gerar a resposta para a solicita\u00e7\u00e3o. Finalmente, a fun\u00e7\u00e3o retorna_response() chama a fun\u00e7\u00e3o start_response() para informar ao servidor que a solicita\u00e7\u00e3o foi processada. A fun\u00e7\u00e3o start_response() recebe o c\u00f3digo de status da resposta e uma lista de cabe\u00e7alhos como par\u00e2metros. O c\u00f3digo de status da resposta indica o resultado da solicita\u00e7\u00e3o. Por exemplo, o c\u00f3digo de status 200 OK indica que a solicita\u00e7\u00e3o foi bem-sucedida. Os cabe\u00e7alhos da resposta fornecem informa\u00e7\u00f5es adicionais sobre a resposta. Por exemplo, o cabe\u00e7alho Content-Type indica o tipo de conte\u00fado da resposta. \u00c9 importante entender o que s\u00e3o as classes HTTPRequest, JesonResponse e HttpResponse. Pois elas ser\u00e3o usadas nas nossas funcoes_request_response.","title":"Backend"},{"location":"backend/#backend","text":"","title":"Backend"},{"location":"backend/#wgsi","text":"O que significa o WGSI? Significa We're Gonna Solve It! Esse ser\u00e1 o nome do nosso protocolinho para comunica\u00e7\u00e3o com servidor! Na verdade, o nome do arquivo deveria ser WSGI, um padr\u00e3o (protocolo) de interface de comunica\u00e7\u00e3o da aplica\u00e7\u00e3o python e o servidor web proposto pela PEP 333 . S\u00f3 que na hora do sono, acabamos digitando WGSI, ao inv\u00e9s de WSGI, e bem, Apesar do Vamos resolver isso! N\u00f3s n\u00e3o vamos resolver isso. Oficialmente, nosso protocolinho de comunica\u00e7\u00e3o com servidor ser\u00e1 conhecido como \"WGSI\", que, \u00e9 claro, ainda significa \"We're Gonna Solve It!\" (Vamos Resolver Isso!). Contudo, vamos apenas deixar assim, est\u00e1 bem? Mas procurem por WSGI! O PEP 333 diz que como tudo come\u00e7a! Tudo precisa come\u00e7ar com uma fun\u00e7\u00e3o (um cham\u00e1vel) que recebe um dicion\u00e1rio com vari\u00e1veis de ambiente e uma outra fun\u00e7\u00e3o. Ela ser\u00e1 respons\u00e1vel pela primeira comunica\u00e7\u00e3o com a web. A nossa fun\u00e7\u00e3o recebe o nome de \"retorna_response(environ, start_response)\". Ao executar o comando 'python3 wgsi.py', server deixa dispon\u00edvel na porta 8080 o acesso para nosso backend. Quando algu\u00e9m acessar essa porta, ent\u00e3o ser\u00e1 executado o retorna_response , terceiro par\u00e2metro da fun\u00e7\u00e3o make_server(). A fun\u00e7\u00e3o retorna_response() \u00e9 a fun\u00e7\u00e3o principal de um servidor WSGI. Ela recebe uma solicita\u00e7\u00e3o do navegador (atrav\u00e9s do par\u00e2metro environ) e retorna uma resposta (atrav\u00e9s do par\u00e2metro start_response). O primeiro passo da fun\u00e7\u00e3o \u00e9 criar uma inst\u00e2ncia de HTTPRequest a partir do dicion\u00e1rio environ. O objeto HTTPRequest representa a solicita\u00e7\u00e3o do navegador. Ele cont\u00e9m informa\u00e7\u00f5es como o m\u00e9todo HTTP, os cabe\u00e7alhos, a URL, os par\u00e2metros de consulta e outras informa\u00e7\u00f5es relacionadas \u00e0 solicita\u00e7\u00e3o. Em seguida, a fun\u00e7\u00e3o chama a fun\u00e7\u00e3o url_match() para encontrar qual view (fun\u00e7\u00e3o que recebe um request e responde um response) deve ser executada para atender \u00e0 solicita\u00e7\u00e3o. A fun\u00e7\u00e3o url_match() recebe a URL da solicita\u00e7\u00e3o como par\u00e2metro (request.path). Se a fun\u00e7\u00e3o url_match() retornar uma fun\u00e7\u00e3o view, a fun\u00e7\u00e3o retorna_response() chama a fun\u00e7\u00e3o view com o objeto HTTPRequest como par\u00e2metro. A fun\u00e7\u00e3o view \u00e9 respons\u00e1vel por gerar a resposta para a solicita\u00e7\u00e3o. Finalmente, a fun\u00e7\u00e3o retorna_response() chama a fun\u00e7\u00e3o start_response() para informar ao servidor que a solicita\u00e7\u00e3o foi processada. A fun\u00e7\u00e3o start_response() recebe o c\u00f3digo de status da resposta e uma lista de cabe\u00e7alhos como par\u00e2metros. O c\u00f3digo de status da resposta indica o resultado da solicita\u00e7\u00e3o. Por exemplo, o c\u00f3digo de status 200 OK indica que a solicita\u00e7\u00e3o foi bem-sucedida. Os cabe\u00e7alhos da resposta fornecem informa\u00e7\u00f5es adicionais sobre a resposta. Por exemplo, o cabe\u00e7alho Content-Type indica o tipo de conte\u00fado da resposta. \u00c9 importante entender o que s\u00e3o as classes HTTPRequest, JesonResponse e HttpResponse. Pois elas ser\u00e3o usadas nas nossas funcoes_request_response.","title":"WGSI"},{"location":"biblioteca/","text":"Como fazer o pull request no local correto. Devido a orienta\u00e7\u00e3o do professor, n\u00e3o vamos poder commitar na MAIN. Dessa forma, vamos fazer uma branch por sprint. Nossa primeira sprint vai ter a branch. S-01/main-primeira-sprint Como se fosse a primeira vez: configurando upstream a) Conectando o reposit\u00f3rio original na upstream \u00c9 preciso entender que seu c\u00f3digo habitar\u00e1, em pelo menos, tr\u00eas arquivos. - Na sua m\u00e1quina, chamada de local. - No seu reposit\u00f3rio remoto. Seu fork. - No reposit\u00f3rio original, upstream Para que todos tenham as modifica\u00e7\u00f5es de todos, o caminho para puxar atualiza\u00e7\u00f5es sempre ser\u00e1 upstream > fork > reposit\u00f3rio local. Av\u00f4 -> pai -> filho. N\u00e3o \u00e9 uma boa ideia puxar modifica\u00e7\u00f5es de av\u00f4 direto para filho, t\u00e1! No seu reposit\u00f3rio local, ser\u00e1 necess\u00e1rio indicar quem ser\u00e1 a upstream, ou seja, a upstream \u00e9 a liga\u00e7\u00e3o direta com projeto original. git remote add upstream https://github.com/ClaraSantosmf/FATEC-API-1-SEMESTRE Agora seu reposit\u00f3rio est\u00e1 dessa forma. git push e git pull enviar\u00e3o as modifica\u00e7\u00f5es para seu fork. git pull upstream vai trazer as informa\u00e7\u00f5es do reposit\u00f3rio original. Mas por que n\u00e3o posso fazer git push upstream? Porque upstream n\u00e3o autoriza pull de reposit\u00f3rio original. Agora, com o comando para listar os nomes das branchs da upstream. git ls-remote Deve haver um retorno desse estilo A partir disso, vamos criar uma branch que ser\u00e1 sincronizada direta com a upstream. Como voc\u00ea j\u00e1 sabe, nossa primeira sprint ser\u00e1 a partir da S-01/main-primeira-sprint b) criando sua branch para copiar a upstream. Voc\u00ea n\u00e3o deve fazer altera\u00e7\u00f5es direto na upstream, ent\u00e3o vamos copia-la! git switch -c S-01/main-primeira-sprint O que isso faz? Cria uma nova branch local chamada S-01/main-primeira-sprint. Faz o checkout daquela branch. Faz o pull das altera\u00e7\u00f5es de origin/S-01/main-primeira-sprint para aquela branch c) Puxando altera\u00e7\u00f5es da upstream. Agora voc\u00ea deve puxar as atualiza\u00e7\u00f5es da upstream. git pull upstream S-01/main-primeira-sprint Agora sua branch trar\u00e1 todas as atualiza\u00e7\u00e3o dessa branch da upstream. \u00c9 a partir dessa branch atualizada, que voc\u00ea deve criar suas branchs! Depois de ter branch s-01 criada! Entrou para trabalhar e precisa puxar atualiza\u00e7\u00f5es dos colegas? Simples. No terminal, mude para branch git switch S-01/main-primeira-sprint Rode o comando para trazer as atualiza\u00e7\u00f5es. git pull upstream S-01/main-primeira-sprint Agora mude para sua branch de trabalho. Vou usar a minha como exemplo que \u00e9 a branch \"Santos/implementando-WSGI\" git switch Santos/implementandoW-WSGI E agora o comando de mergear (misturar atualiza\u00e7\u00f5es com seu c\u00f3digo) git merge S-01/main-primeira-sprint Tudo certo e nada errado! Voc\u00ea tem uma branch na sua \u00faltima vers\u00e3o. Pull Request e Code Review. Como fazer boas constribui\u00e7\u00f5es? Passos para contribuir: while projeto == inacabado: 1- Atualize a main 2- Crie sua branch 3- Realize commites at\u00f4micos 4- Realize um push para criar um PR 5- Pe\u00e7a codeReview 6- Fa\u00e7a os reparos necess\u00e1rios no CodeReview 7- Seja aprovado e mergeado O que \u00e9 pull request? Pull Request \u00e9 a nossa forma de contribui\u00e7\u00e3o o projeto. Sugerimos a leitura dessa documenta\u00e7\u00e3o especifica sobre como contribuir em um projeto GitHub. Para algo de consulta r\u00e1pida e explica\u00e7\u00f5es breve para o dia a dia, deixo esse Medium . O que \u00e9 code review? O Code Review \u00e9 um processo no fluxo de desenvolvimento de software. Algu\u00e9m prop\u00f5e altera\u00e7\u00f5es ou cria\u00e7\u00e3o no c\u00f3digo por meio de um pull request (PR) e \u00e9 analisado por outras pessoas. Isso ajuda identificar bugs e melhora a qualidade das implementa\u00e7\u00f5es e compartilhar conhecimento. A responsabilidade de manter o CR em dia \u00e9 de todos. Todos podem fazer e opinar. Boas pr\u00e1ticas \ud83d\udca1 Antes de revisar o c\u00f3digo, tenha como premissa que o autor do **PR** fez o seu melhor em prol de solucionar o problema. Revisor Leia a descri\u00e7\u00e3o do PR, deve estar descrito o problema que a implementa\u00e7\u00e3o se prop\u00f5e resolver. N\u00e3o encontrou na descri\u00e7\u00e3o do PR? Pe\u00e7a para que o autor ajuste isso e dedique um tempo para entender o contexto e as motiva\u00e7\u00f5es das mudan\u00e7as. Fa\u00e7a coment\u00e1rios atrav\u00e9s de observa\u00e7\u00f5es, impactos, requisi\u00e7\u00f5es e perguntas. Exemplos: \u274c \u2639\ufe0f \u2705 \ud83d\ude00 Por qu\u00ea? Observa\u00e7\u00e3o Voc\u00ea est\u00e1 fazendo uma implementa\u00e7\u00e3o errada. Essa implementa\u00e7\u00e3o est\u00e1 repetida em outro contexto e poderia ser reutilizada. $LINK A revis\u00e3o \u00e9 sobre o c\u00f3digo, nunca sobre o autor. Fornecer links, quando poss\u00edvel, de certa forma \u00e9 uma gentileza e ajuda o autor a entender seu ponto de vista. Sugerir r\u00e1pidas edi\u00e7\u00f5es pode ajudar tamb\u00e9m. Impacto Essa implementa\u00e7\u00e3o n\u00e3o est\u00e1 clara. Essa implementa\u00e7\u00e3o n\u00e3o deixa claro o objetivo do m\u00e9todo por X motivo. Explicar o impacto permite que o autor entenda a motiva\u00e7\u00e3o da sua observa\u00e7\u00e3o e n\u00e3o desvaloriza o trabalho que j\u00e1 foi feito. Requisi\u00e7\u00e3o - Use o padr\u00e3o X. Fa\u00e7a Y. Para esse cen\u00e1rio eu sugiro fazer/usar X, por N motivos Um ponto de vista mais pessoal se aproxima da forma com que conversamos no dia a dia, afirma\u00e7\u00f5es no imperativo podem soar rudes. Explicar o motivo da requisi\u00e7\u00e3o encoraja a colabora\u00e7\u00e3o. Pergunta Por que voc\u00ea n\u00e3o faz X? O que voc\u00ea acha de fazer X? Pode ajudar em Y. Por meio das respostas, podemos entender melhor a decis\u00e3o para certo ponto do c\u00f3digo. Entenda que existem diferentes solu\u00e7\u00f5es para o mesmo problema: Nem sempre a melhor solu\u00e7\u00e3o \u00e9 a que voc\u00ea esta propondo; Com o time, chegue na melhor solu\u00e7\u00e3o para o problema com o atual conhecimento deles; Tenha claro a distin\u00e7\u00e3o entre boas pr\u00e1ticas e gosto pessoal ; Deixe claro quais coment\u00e1rios s\u00e3o \u201cbloqueantes\u201d (n\u00e3o vai subir sem que aquilo seja ajustado) e voc\u00ea espera que haja uma altera\u00e7\u00e3o significativa. Se sua revis\u00e3o possui apenas pequenos apontamentos que podem ser facilmente resolvidos, considere aprovar a solicita\u00e7\u00e3o e orientar o autor sobre isso nos coment\u00e1rios, de modo que ele n\u00e3o precise aguardar novamente. Se voc\u00ea acredita que PR est\u00e1 muito grande, explique o motivo e incentive o autor a dividi-lo em menores partes. N\u00e3o foque em deixar o PR excelente (A+), mas em melhor\u00e1-lo a ponto de ficar MVP e planeje evolu\u00e7\u00f5es futuras. Antes de enviar o coment\u00e1rio de CR se pergunte: A afirma\u00e7\u00e3o \u00e9 verdadeira? O coment\u00e1rio est\u00e1 agregando valor para o PR (principalmente se estamos contribuindo com o conhecimento do time e pessoa que abriu PR)? Estou sendo gentil? Autor Assuma como premissa que o revisor est\u00e1 querendo contribuir e tenha humildade para ouvir sobre o seu trabalho. Voc\u00ea e o revisor s\u00e3o do mesmo time . Voc\u00ea deve \u2705 Dar o m\u00e1ximo de contexto ao abrir um PR, lembre-se que o revisor n\u00e3o tem tanto contexto quanto voc\u00ea. Escreva uma boa descri\u00e7\u00e3o ou deixe um link nela. Encarar a revis\u00e3o como aprendizado. Entender que somos sempre enviesados pelo nosso pr\u00f3prio c\u00f3digo. Estar aberto a opini\u00f5es externas: seu c\u00f3digo n\u00e3o \u00e9 seu \"bichinho de estima\u00e7\u00e3o\". Entender que \u00e9 normal ter bugs, implementa\u00e7\u00f5es melhores ou esquecer de algum detalhe. N\u00e3o deve \u274c Encarar coment\u00e1rios como cr\u00edtica pessoal; Levar cr\u00edticas para o lado pessoal, voc\u00ea n\u00e3o \u00e9 o seu c\u00f3digo ; C\u00f3digo Simples \u00e9 melhor do que complexo: cuidado com over-engineering (implemente o que voc\u00ea realmente precisa, n\u00e3o tente adivinhar o que voc\u00ea vai precisar no futuro); Antes de aplicar um design pattern , tenha claro qual problema ele resolve e qual ele n\u00e3o resolve, para n\u00e3o cair em ~~anti-pattern~~ sem saber ( \ud83d\udcd6 livro ) ; Checklist Ao revisar um c\u00f3digo, \u00e9 bom (para o autor e para o revisor) ter um checklist do que precisa ser avaliado. Conferir todos os aspectos do c\u00f3digo de uma vez pode ser exaustivo e propenso a falhas, portanto \u00e9 bom atentar-se a um t\u00f3pico e validar todo conte\u00fado sob aquela \u00f3tica. [ ] Entendi o problema? [ ] Entendi o que o c\u00f3digo est\u00e1 fazendo? [ ] O c\u00f3digo atende todos os requisitos de implementa\u00e7\u00e3o? [ ] A implementa\u00e7\u00e3o resolve o problema apresentado ou est\u00e1 claro como mediremos isso? [ ] A descri\u00e7\u00e3o da PR/commit est\u00e1 conforme a implementa\u00e7\u00e3o feita? [ ] Aten\u00e7\u00e3o a sintaxe, n\u00e3o tem nenhum code smells/ ind\u00edcios de um problema mais profundo? [ ] As exce\u00e7\u00f5es necess\u00e1rias foram tratadas? [ ] Alguma documenta\u00e7\u00e3o adicional precisa ser feita? Refer\u00eancias Code Review Guidelines for Humans How to Make Good Code Reviews Better - Stack Overflow Blog Boas pr\u00e1ticas de reviews Como configurar o projeto? Precisamos rodar nosso projeto na nossa m\u00e1quina! Nisso, vamos configura-la de forma a conseguir exercutar o PBLTeX! Virtualenvs A maneira mais f\u00e1cil de todos terem as mesmas configura\u00e7\u00f5es do projeto na m\u00e1quina \u00e9 por meio de uma virtualenv. Aplica\u00e7\u00f5es em Python normalmente usam pacotes e m\u00f3dulos que n\u00e3o v\u00eam como parte da instala\u00e7\u00e3o padr\u00e3o. Aplica\u00e7\u00f5es \u00e0s vezes necessitam uma vers\u00e3o espec\u00edfica de uma biblioteca, porque ela requer que algum problema em particular tenha sido consertado ou foi escrita utilizando-se de uma vers\u00e3o obsoleta da interface da biblioteca. A solu\u00e7\u00e3o para este problema \u00e9 criar um ambiente virtual, uma \u00e1rvore de diret\u00f3rios que cont\u00e9m uma instala\u00e7\u00e3o Python para uma vers\u00e3o particular do Python, al\u00e9m de uma s\u00e9rie de pacotes adicionais. Virtualenvs - docs Instale o pyenv Use o pyenv para gerenciar as vers\u00f5es de Python e seus virtualenvs. Para instalar ele, use o pyenv-installer . No reposit\u00f3rio tem as instru\u00e7\u00f5es detalhadas, mas talvez seja s\u00f3 isso aqui: curl https://pyenv.run | bash Reinicie o terminal e voc\u00ea j\u00e1 deve conseguir usar o pyenv. # Instale uma vers\u00e3o do 3.11.x. pyenv install 3.11.0 # Crie um virtualenv buser com a vers\u00e3o que voc\u00ea acabou de instalar. pyenv virtualenv 3.11.0 PBLTeX O arquivo .python-version j\u00e1 diz para o pyenv usar o env PBLTeX quando estiver na pasta do projeto. Ou seja, nosso ambiente vai ser sempre ativado automaticamente. Mas caso precise ativa-lo, sempre que quiser, pode fazer: pyenv activate PBLTeX Instale as depend\u00eancias com os seguintes comandos: pip install -r requirements.txt Rode o projeto com: python3 wgsi.py Nesse momento, nosso servidor est\u00e1 fornecendo informa\u00e7\u00f5es na porta :8080 Por\u00e9m, nosso frontend estar\u00e1 na porta:5500 Ent\u00e3o, para olhar o backend : http://127.0.0.1:8080/ Para olhar para o frontend http://127.0.0.1:5500/","title":"Biblioteca"},{"location":"biblioteca/#como-fazer-o-pull-request-no-local-correto","text":"Devido a orienta\u00e7\u00e3o do professor, n\u00e3o vamos poder commitar na MAIN. Dessa forma, vamos fazer uma branch por sprint. Nossa primeira sprint vai ter a branch. S-01/main-primeira-sprint","title":"Como fazer o pull request no local correto."},{"location":"biblioteca/#como-se-fosse-a-primeira-vez-configurando-upstream","text":"a) Conectando o reposit\u00f3rio original na upstream \u00c9 preciso entender que seu c\u00f3digo habitar\u00e1, em pelo menos, tr\u00eas arquivos. - Na sua m\u00e1quina, chamada de local. - No seu reposit\u00f3rio remoto. Seu fork. - No reposit\u00f3rio original, upstream Para que todos tenham as modifica\u00e7\u00f5es de todos, o caminho para puxar atualiza\u00e7\u00f5es sempre ser\u00e1 upstream > fork > reposit\u00f3rio local. Av\u00f4 -> pai -> filho. N\u00e3o \u00e9 uma boa ideia puxar modifica\u00e7\u00f5es de av\u00f4 direto para filho, t\u00e1! No seu reposit\u00f3rio local, ser\u00e1 necess\u00e1rio indicar quem ser\u00e1 a upstream, ou seja, a upstream \u00e9 a liga\u00e7\u00e3o direta com projeto original. git remote add upstream https://github.com/ClaraSantosmf/FATEC-API-1-SEMESTRE Agora seu reposit\u00f3rio est\u00e1 dessa forma. git push e git pull enviar\u00e3o as modifica\u00e7\u00f5es para seu fork. git pull upstream vai trazer as informa\u00e7\u00f5es do reposit\u00f3rio original. Mas por que n\u00e3o posso fazer git push upstream? Porque upstream n\u00e3o autoriza pull de reposit\u00f3rio original. Agora, com o comando para listar os nomes das branchs da upstream. git ls-remote Deve haver um retorno desse estilo A partir disso, vamos criar uma branch que ser\u00e1 sincronizada direta com a upstream. Como voc\u00ea j\u00e1 sabe, nossa primeira sprint ser\u00e1 a partir da S-01/main-primeira-sprint b) criando sua branch para copiar a upstream. Voc\u00ea n\u00e3o deve fazer altera\u00e7\u00f5es direto na upstream, ent\u00e3o vamos copia-la! git switch -c S-01/main-primeira-sprint O que isso faz? Cria uma nova branch local chamada S-01/main-primeira-sprint. Faz o checkout daquela branch. Faz o pull das altera\u00e7\u00f5es de origin/S-01/main-primeira-sprint para aquela branch c) Puxando altera\u00e7\u00f5es da upstream. Agora voc\u00ea deve puxar as atualiza\u00e7\u00f5es da upstream. git pull upstream S-01/main-primeira-sprint Agora sua branch trar\u00e1 todas as atualiza\u00e7\u00e3o dessa branch da upstream. \u00c9 a partir dessa branch atualizada, que voc\u00ea deve criar suas branchs!","title":"Como se fosse a primeira vez: configurando upstream"},{"location":"biblioteca/#depois-de-ter-branch-s-01-criada","text":"Entrou para trabalhar e precisa puxar atualiza\u00e7\u00f5es dos colegas? Simples. No terminal, mude para branch git switch S-01/main-primeira-sprint Rode o comando para trazer as atualiza\u00e7\u00f5es. git pull upstream S-01/main-primeira-sprint Agora mude para sua branch de trabalho. Vou usar a minha como exemplo que \u00e9 a branch \"Santos/implementando-WSGI\" git switch Santos/implementandoW-WSGI E agora o comando de mergear (misturar atualiza\u00e7\u00f5es com seu c\u00f3digo) git merge S-01/main-primeira-sprint Tudo certo e nada errado! Voc\u00ea tem uma branch na sua \u00faltima vers\u00e3o.","title":"Depois de ter branch s-01 criada!"},{"location":"biblioteca/#pull-request-e-code-review-como-fazer-boas-constribuicoes","text":"Passos para contribuir: while projeto == inacabado: 1- Atualize a main 2- Crie sua branch 3- Realize commites at\u00f4micos 4- Realize um push para criar um PR 5- Pe\u00e7a codeReview 6- Fa\u00e7a os reparos necess\u00e1rios no CodeReview 7- Seja aprovado e mergeado","title":"Pull Request e Code Review. Como fazer boas constribui\u00e7\u00f5es?"},{"location":"biblioteca/#o-que-e-pull-request","text":"Pull Request \u00e9 a nossa forma de contribui\u00e7\u00e3o o projeto. Sugerimos a leitura dessa documenta\u00e7\u00e3o especifica sobre como contribuir em um projeto GitHub. Para algo de consulta r\u00e1pida e explica\u00e7\u00f5es breve para o dia a dia, deixo esse Medium .","title":"O que \u00e9 pull request?"},{"location":"biblioteca/#o-que-e-code-review","text":"O Code Review \u00e9 um processo no fluxo de desenvolvimento de software. Algu\u00e9m prop\u00f5e altera\u00e7\u00f5es ou cria\u00e7\u00e3o no c\u00f3digo por meio de um pull request (PR) e \u00e9 analisado por outras pessoas. Isso ajuda identificar bugs e melhora a qualidade das implementa\u00e7\u00f5es e compartilhar conhecimento. A responsabilidade de manter o CR em dia \u00e9 de todos. Todos podem fazer e opinar.","title":"O que \u00e9 code review?"},{"location":"biblioteca/#boas-praticas","text":"\ud83d\udca1 Antes de revisar o c\u00f3digo, tenha como premissa que o autor do **PR** fez o seu melhor em prol de solucionar o problema.","title":"Boas pr\u00e1ticas"},{"location":"biblioteca/#revisor","text":"Leia a descri\u00e7\u00e3o do PR, deve estar descrito o problema que a implementa\u00e7\u00e3o se prop\u00f5e resolver. N\u00e3o encontrou na descri\u00e7\u00e3o do PR? Pe\u00e7a para que o autor ajuste isso e dedique um tempo para entender o contexto e as motiva\u00e7\u00f5es das mudan\u00e7as. Fa\u00e7a coment\u00e1rios atrav\u00e9s de observa\u00e7\u00f5es, impactos, requisi\u00e7\u00f5es e perguntas. Exemplos: \u274c \u2639\ufe0f \u2705 \ud83d\ude00 Por qu\u00ea? Observa\u00e7\u00e3o Voc\u00ea est\u00e1 fazendo uma implementa\u00e7\u00e3o errada. Essa implementa\u00e7\u00e3o est\u00e1 repetida em outro contexto e poderia ser reutilizada. $LINK A revis\u00e3o \u00e9 sobre o c\u00f3digo, nunca sobre o autor. Fornecer links, quando poss\u00edvel, de certa forma \u00e9 uma gentileza e ajuda o autor a entender seu ponto de vista. Sugerir r\u00e1pidas edi\u00e7\u00f5es pode ajudar tamb\u00e9m. Impacto Essa implementa\u00e7\u00e3o n\u00e3o est\u00e1 clara. Essa implementa\u00e7\u00e3o n\u00e3o deixa claro o objetivo do m\u00e9todo por X motivo. Explicar o impacto permite que o autor entenda a motiva\u00e7\u00e3o da sua observa\u00e7\u00e3o e n\u00e3o desvaloriza o trabalho que j\u00e1 foi feito. Requisi\u00e7\u00e3o - Use o padr\u00e3o X. Fa\u00e7a Y. Para esse cen\u00e1rio eu sugiro fazer/usar X, por N motivos Um ponto de vista mais pessoal se aproxima da forma com que conversamos no dia a dia, afirma\u00e7\u00f5es no imperativo podem soar rudes. Explicar o motivo da requisi\u00e7\u00e3o encoraja a colabora\u00e7\u00e3o. Pergunta Por que voc\u00ea n\u00e3o faz X? O que voc\u00ea acha de fazer X? Pode ajudar em Y. Por meio das respostas, podemos entender melhor a decis\u00e3o para certo ponto do c\u00f3digo. Entenda que existem diferentes solu\u00e7\u00f5es para o mesmo problema: Nem sempre a melhor solu\u00e7\u00e3o \u00e9 a que voc\u00ea esta propondo; Com o time, chegue na melhor solu\u00e7\u00e3o para o problema com o atual conhecimento deles; Tenha claro a distin\u00e7\u00e3o entre boas pr\u00e1ticas e gosto pessoal ; Deixe claro quais coment\u00e1rios s\u00e3o \u201cbloqueantes\u201d (n\u00e3o vai subir sem que aquilo seja ajustado) e voc\u00ea espera que haja uma altera\u00e7\u00e3o significativa. Se sua revis\u00e3o possui apenas pequenos apontamentos que podem ser facilmente resolvidos, considere aprovar a solicita\u00e7\u00e3o e orientar o autor sobre isso nos coment\u00e1rios, de modo que ele n\u00e3o precise aguardar novamente. Se voc\u00ea acredita que PR est\u00e1 muito grande, explique o motivo e incentive o autor a dividi-lo em menores partes. N\u00e3o foque em deixar o PR excelente (A+), mas em melhor\u00e1-lo a ponto de ficar MVP e planeje evolu\u00e7\u00f5es futuras. Antes de enviar o coment\u00e1rio de CR se pergunte: A afirma\u00e7\u00e3o \u00e9 verdadeira? O coment\u00e1rio est\u00e1 agregando valor para o PR (principalmente se estamos contribuindo com o conhecimento do time e pessoa que abriu PR)? Estou sendo gentil?","title":"Revisor"},{"location":"biblioteca/#autor","text":"Assuma como premissa que o revisor est\u00e1 querendo contribuir e tenha humildade para ouvir sobre o seu trabalho. Voc\u00ea e o revisor s\u00e3o do mesmo time .","title":"Autor"},{"location":"biblioteca/#voce-deve","text":"Dar o m\u00e1ximo de contexto ao abrir um PR, lembre-se que o revisor n\u00e3o tem tanto contexto quanto voc\u00ea. Escreva uma boa descri\u00e7\u00e3o ou deixe um link nela. Encarar a revis\u00e3o como aprendizado. Entender que somos sempre enviesados pelo nosso pr\u00f3prio c\u00f3digo. Estar aberto a opini\u00f5es externas: seu c\u00f3digo n\u00e3o \u00e9 seu \"bichinho de estima\u00e7\u00e3o\". Entender que \u00e9 normal ter bugs, implementa\u00e7\u00f5es melhores ou esquecer de algum detalhe.","title":"Voc\u00ea deve \u2705"},{"location":"biblioteca/#nao-deve","text":"Encarar coment\u00e1rios como cr\u00edtica pessoal; Levar cr\u00edticas para o lado pessoal, voc\u00ea n\u00e3o \u00e9 o seu c\u00f3digo ;","title":"N\u00e3o deve \u274c"},{"location":"biblioteca/#codigo","text":"Simples \u00e9 melhor do que complexo: cuidado com over-engineering (implemente o que voc\u00ea realmente precisa, n\u00e3o tente adivinhar o que voc\u00ea vai precisar no futuro); Antes de aplicar um design pattern , tenha claro qual problema ele resolve e qual ele n\u00e3o resolve, para n\u00e3o cair em ~~anti-pattern~~ sem saber ( \ud83d\udcd6 livro ) ;","title":"C\u00f3digo"},{"location":"biblioteca/#checklist","text":"Ao revisar um c\u00f3digo, \u00e9 bom (para o autor e para o revisor) ter um checklist do que precisa ser avaliado. Conferir todos os aspectos do c\u00f3digo de uma vez pode ser exaustivo e propenso a falhas, portanto \u00e9 bom atentar-se a um t\u00f3pico e validar todo conte\u00fado sob aquela \u00f3tica. [ ] Entendi o problema? [ ] Entendi o que o c\u00f3digo est\u00e1 fazendo? [ ] O c\u00f3digo atende todos os requisitos de implementa\u00e7\u00e3o? [ ] A implementa\u00e7\u00e3o resolve o problema apresentado ou est\u00e1 claro como mediremos isso? [ ] A descri\u00e7\u00e3o da PR/commit est\u00e1 conforme a implementa\u00e7\u00e3o feita? [ ] Aten\u00e7\u00e3o a sintaxe, n\u00e3o tem nenhum code smells/ ind\u00edcios de um problema mais profundo? [ ] As exce\u00e7\u00f5es necess\u00e1rias foram tratadas? [ ] Alguma documenta\u00e7\u00e3o adicional precisa ser feita?","title":"Checklist"},{"location":"biblioteca/#referencias","text":"Code Review Guidelines for Humans How to Make Good Code Reviews Better - Stack Overflow Blog Boas pr\u00e1ticas de reviews","title":"Refer\u00eancias"},{"location":"biblioteca/#como-configurar-o-projeto","text":"Precisamos rodar nosso projeto na nossa m\u00e1quina! Nisso, vamos configura-la de forma a conseguir exercutar o PBLTeX!","title":"Como configurar o projeto?"},{"location":"biblioteca/#virtualenvs","text":"A maneira mais f\u00e1cil de todos terem as mesmas configura\u00e7\u00f5es do projeto na m\u00e1quina \u00e9 por meio de uma virtualenv. Aplica\u00e7\u00f5es em Python normalmente usam pacotes e m\u00f3dulos que n\u00e3o v\u00eam como parte da instala\u00e7\u00e3o padr\u00e3o. Aplica\u00e7\u00f5es \u00e0s vezes necessitam uma vers\u00e3o espec\u00edfica de uma biblioteca, porque ela requer que algum problema em particular tenha sido consertado ou foi escrita utilizando-se de uma vers\u00e3o obsoleta da interface da biblioteca. A solu\u00e7\u00e3o para este problema \u00e9 criar um ambiente virtual, uma \u00e1rvore de diret\u00f3rios que cont\u00e9m uma instala\u00e7\u00e3o Python para uma vers\u00e3o particular do Python, al\u00e9m de uma s\u00e9rie de pacotes adicionais. Virtualenvs - docs","title":"Virtualenvs"},{"location":"biblioteca/#instale-o-pyenv","text":"Use o pyenv para gerenciar as vers\u00f5es de Python e seus virtualenvs. Para instalar ele, use o pyenv-installer . No reposit\u00f3rio tem as instru\u00e7\u00f5es detalhadas, mas talvez seja s\u00f3 isso aqui: curl https://pyenv.run | bash Reinicie o terminal e voc\u00ea j\u00e1 deve conseguir usar o pyenv. # Instale uma vers\u00e3o do 3.11.x. pyenv install 3.11.0 # Crie um virtualenv buser com a vers\u00e3o que voc\u00ea acabou de instalar. pyenv virtualenv 3.11.0 PBLTeX O arquivo .python-version j\u00e1 diz para o pyenv usar o env PBLTeX quando estiver na pasta do projeto. Ou seja, nosso ambiente vai ser sempre ativado automaticamente. Mas caso precise ativa-lo, sempre que quiser, pode fazer: pyenv activate PBLTeX Instale as depend\u00eancias com os seguintes comandos: pip install -r requirements.txt Rode o projeto com: python3 wgsi.py Nesse momento, nosso servidor est\u00e1 fornecendo informa\u00e7\u00f5es na porta :8080 Por\u00e9m, nosso frontend estar\u00e1 na porta:5500 Ent\u00e3o, para olhar o backend : http://127.0.0.1:8080/ Para olhar para o frontend http://127.0.0.1:5500/","title":"Instale o pyenv"},{"location":"frontend/","text":"Aqui vamos discutir e explicar nosso frontend! Para dar no\u00e7\u00e3o do nosso projeto, n\u00f3s desenhamos todas as telas que imaginamos ser necess\u00e1rias a partir do nosso backlog inicial e os requisitos. Wireframe e fluxos do produto \u00c9pico 1: Exporta\u00e7\u00e3o de Dados Tela: Index.html com bot\u00e3o para gerar relat\u00f3rios, bot\u00e3o para exportar dados, e bot\u00f5es para acessar todas as funcionalidades do sistema. \u00c9pico 2: Gerenciamento de Turmas Telas: gerenciamento_turmas.html (Listagem de turmas), com bot\u00e3o para exclus\u00e3o de turmas. criar_turma.html (Cria\u00e7\u00e3o de turma) editar_turmas.html (Edi\u00e7\u00e3o de turma) \u00c9pico 3: Gerenciamento de Grupos Telas: visualizacao_grupos.html (Listagem de grupos), com bot\u00e3o para exclus\u00e3o de grupo. criar_grupo.html (Cria\u00e7\u00e3o de grupos) editar_grupos.html (Edi\u00e7\u00e3o de grupos) \u00c9pico 4: Gerenciamento de alunos. Telas: gerenciamento_alunos.html (Listagem de alunos), com bot\u00e3o para exclus\u00e3o de alunos. adicionar_aluno.html (Cria\u00e7\u00e3o de alunos) edicao_alunos.html (Edi\u00e7\u00e3o de alunos) \u00c9pico 5: Gerenciamento de Ciclos de Entrega e Scores Tela: gerenciamento_ciclos.html (Listagem de notas dos alunos), com bot\u00e3o para exclus\u00e3o de notas. editar_notas.html adicionar_notas.html \u00c9pico 6: Configura\u00e7\u00f5es Globais Tela: gerenciamento_global.html (Listagem e edi\u00e7\u00e3o de par\u00e2metros globais), com bot\u00e3o para exclus\u00e3o de configura\u00e7\u00f5es globais, que, cuidado, vai excluir a turma inteira. editar_gerenciamento_global.html","title":"Frontend"},{"location":"frontend/#wireframe-e-fluxos-do-produto","text":"\u00c9pico 1: Exporta\u00e7\u00e3o de Dados Tela: Index.html com bot\u00e3o para gerar relat\u00f3rios, bot\u00e3o para exportar dados, e bot\u00f5es para acessar todas as funcionalidades do sistema. \u00c9pico 2: Gerenciamento de Turmas Telas: gerenciamento_turmas.html (Listagem de turmas), com bot\u00e3o para exclus\u00e3o de turmas. criar_turma.html (Cria\u00e7\u00e3o de turma) editar_turmas.html (Edi\u00e7\u00e3o de turma) \u00c9pico 3: Gerenciamento de Grupos Telas: visualizacao_grupos.html (Listagem de grupos), com bot\u00e3o para exclus\u00e3o de grupo. criar_grupo.html (Cria\u00e7\u00e3o de grupos) editar_grupos.html (Edi\u00e7\u00e3o de grupos) \u00c9pico 4: Gerenciamento de alunos. Telas: gerenciamento_alunos.html (Listagem de alunos), com bot\u00e3o para exclus\u00e3o de alunos. adicionar_aluno.html (Cria\u00e7\u00e3o de alunos) edicao_alunos.html (Edi\u00e7\u00e3o de alunos) \u00c9pico 5: Gerenciamento de Ciclos de Entrega e Scores Tela: gerenciamento_ciclos.html (Listagem de notas dos alunos), com bot\u00e3o para exclus\u00e3o de notas. editar_notas.html adicionar_notas.html \u00c9pico 6: Configura\u00e7\u00f5es Globais Tela: gerenciamento_global.html (Listagem e edi\u00e7\u00e3o de par\u00e2metros globais), com bot\u00e3o para exclus\u00e3o de configura\u00e7\u00f5es globais, que, cuidado, vai excluir a turma inteira. editar_gerenciamento_global.html","title":"Wireframe e fluxos do produto"},{"location":"sprints/","text":"BACKLOG API 1 SEMESTRE \u00c9picos Exporta\u00e7\u00e3o de Dados (Back-end) : A consolida\u00e7\u00e3o e exporta\u00e7\u00e3o de dados costumam ser tarefas realizadas no back-end, pois envolvem o processamento e a prepara\u00e7\u00e3o de dados para exporta\u00e7\u00e3o. Gerenciamento de Turmas (curso) : Esse \u00e9pico est\u00e1 relacionado \u00e0 cria\u00e7\u00e3o, atualiza\u00e7\u00e3o e visualiza\u00e7\u00e3o de turmas, que envolvem a interface do usu\u00e1rio para realizar essas opera\u00e7\u00f5es. Gerenciamento de grupo : Esse \u00e9pico est\u00e1 relacionado \u00e0 cria\u00e7\u00e3o, atualiza\u00e7\u00e3o e visualiza\u00e7\u00e3o de grupos, que envolvem a interface do usu\u00e1rio para realizar essas opera\u00e7\u00f5es. Gerenciamento de Alunos : Esse \u00e9pico lida com a adi\u00e7\u00e3o, atualiza\u00e7\u00e3o e visualiza\u00e7\u00e3o de informa\u00e7\u00f5es de alunos, bem como a adi\u00e7\u00e3o de notas parciais, todos os quais s\u00e3o intera\u00e7\u00f5es do usu\u00e1rio com a interface. Gerenciamento de Ciclos de Entrega e Scores: Este \u00e9pico envolve a cria\u00e7\u00e3o, atualiza\u00e7\u00e3o e visualiza\u00e7\u00e3o de ciclos de entrega e scores parciais, que s\u00e3o aspectos vis\u00edveis para o usu\u00e1rio. Visibilidade e Acompanhamento: Esse \u00e9pico visa fornecer informa\u00e7\u00f5es objetivas sobre turmas, grupos de alunos, etc. A apresenta\u00e7\u00e3o dessas informa\u00e7\u00f5es \u00e9 uma preocupa\u00e7\u00e3o do front-end. Configura\u00e7\u00f5es Globais (Back-end): Este \u00e9pico envolve a defini\u00e7\u00e3o de par\u00e2metros globais e o afeta o funcionamento do sistema. Essa configura\u00e7\u00e3o geralmente \u00e9 tratada no back-end. Importa\u00e7\u00e3o de Dados massivo (Back-end): A tarefa de carregar informa\u00e7\u00f5es de alunos e scores a partir de arquivos \u00e9 uma opera\u00e7\u00e3o que envolve o back-end, pois requer manipula\u00e7\u00e3o de dados. Detalhamento dos \u00c9picos \u00c9pico 1: Exporta\u00e7\u00e3o de Dados Hist\u00f3ria de Usu\u00e1rio 1: Como um administrador, eu quero selecionar as op\u00e7\u00f5es de gerenciamento e relat\u00f3rios. Isso envolve a exporta\u00e7\u00e3o de dados. Frontend: - Bot\u00e3o no Index.html que gere relat\u00f3rios vindo dos: gerenciamento_turmas.html, gerenciamento_alunos.html, gerenciamento_ciclos.html, gerenciamento_global.html. Backend: - Rota da API - /api/relatorio/criar: Consolida os dados e exporta em formato PDF. - Consolida os dados e os exporta em formato PDF. \u00c9pico 2: Gerenciamento de Turmas Hist\u00f3ria de Usu\u00e1rio 1: Como um administrador, eu quero visualizar a lista de turmas dispon\u00edveis, seus respectivos grupos com os alunos e alunos. Frontend: Gerenciamento_turmas.html que conter\u00e1 todas as turmas j\u00e1 criadas com \u00edcone de edi\u00e7\u00e3o e de exclus\u00e3o em cada um deles. Dever\u00e1 ser criado um campo onde ser\u00e3o inseridas as turmas de forma din\u00e2mica. Bot\u00e3o para criar uma nova turma. Backend - M\u00f3dulo gerenciador_turmas.py com fun\u00e7\u00f5es para listar turmas. - Rotas de API: - /api/turmas/get: Retorna a lista de turmas dispon\u00edveis. - /api/turmas/delete: Deletar uma turma. Hist\u00f3ria de Usu\u00e1rio 2: Como um administrador, eu quero criar uma nova turma com nome da turma, o professor e a associa\u00e7\u00e3o de grupos pr\u00e9-existentes ou nenhum grupo. A turma n\u00e3o precisa ser criada com grupo de alunos, mas precisa poder receb\u00ea-los. A turma s\u00f3 ser\u00e1 ativa com grupo de alunos vinculados. Frontend: - Template HTML para Gerenciamento de Turmas: - criar_turma.html que conter\u00e1 os formul\u00e1rios para criar uma nova turma. - A inclus\u00e3o de grupos de alunos n\u00e3o precisa ser obrigat\u00f3ria. - Nome da turma e professor s\u00e3o obrigat\u00f3rios. - Campo para procurar por um grupo pr\u00e9-existente - Campo para listar grupos Backend: M\u00f3dulo gerenciador_turmas.py com fun\u00e7\u00f5es para criar uma turma com/sem novo grupo de alunos. Rotas de API: /api/turmas/criar: Manipula a cria\u00e7\u00e3o de uma nova turma. /api/grupos /listar: Manipula a lista de grupos preexistente Hist\u00f3ria de Usu\u00e1rio 3: Como um administrador, eu quero editar as informa\u00e7\u00f5es de uma turma e adicionar mais grupos. Template HTML para Gerenciamento de Turmas: editar_turmas.html que conter\u00e1 os formul\u00e1rios de edi\u00e7\u00e3o de uma nova turma, com possibilidade de ser levada a edi\u00e7\u00e3o de grupo e de criar novo grupo. M\u00f3dulo gerenciador_turmas.py com fun\u00e7\u00f5es para atualizar informa\u00e7\u00f5es de turma e editar grupo de alunos. Rotas de API: /api/turmas/atualizar/{id}: Manipula a atualiza\u00e7\u00e3o das informa\u00e7\u00f5es de uma turma espec\u00edfica. /api/grupos/atualizar/{id}: Manipula a atualiza\u00e7\u00e3o das informa\u00e7\u00f5es de um grupo de alunos espec\u00edfico. Hist\u00f3ria de Usu\u00e1rio 4: Como um administrador, eu quero excluir uma turma e um grupo de alunos. Frontend: \u00cdcone de exclus\u00e3o do grupo M\u00f3dulo gerenciador_turmas.py com fun\u00e7\u00f5es para excluir turmas. Rotas de API: /api/turmas/excluir/{id}: Manipula a exclus\u00e3o de uma turma espec\u00edfica. /api/grupos/excluir/{id}: Manipula a exclus\u00e3o de um grupo espec\u00edfico. (Vamos excluir o grupo?) ** \u00c9pico 3: Gerenciamento de grupos** Hist\u00f3ria de Usu\u00e1rio 1: Como administrador, quero ver todos os grupos formados e associados \u00e0s turmas. Frontend: Template HTML para visualiza\u00e7\u00e3o de grupos: gerenciamento_grupos.html que conter\u00e1 todos os grupos j\u00e1 criados com \u00edcone de edi\u00e7\u00e3o e de exclus\u00e3o em cada um deles. Cada grupo deve apresentar seu nome e respectiva turma. Backend: M\u00f3dulo gerenciador_grupos.py com fun\u00e7\u00f5es para listar os grupos associados \u00e0s turmas. Rotas de API: /api/grupos/listar: Manipula a listagem de grupos. Hist\u00f3ria do usu\u00e1rio 2: Como um administrador, eu quero criar grupos de alunos associado a uma turma. Frontend Template HTML para criar um grupo: criar_grupo.html que conter\u00e1 os formul\u00e1rios de cria\u00e7\u00e3o de um novo grupo Selecionar a qual turma ele pertencer\u00e1. Para adicionar um grupo \u00e9 necess\u00e1rio inserir o nome do grupo e a turma. Backend M\u00f3dulo gerenciador_grupo.py com fun\u00e7\u00f5es para adicionar pr\u00e9-existente, e associar esse grupo a uma turma. Rotas de API: /api/tumas/listas: Fazer a leitura das turmas existentes. /api/grupos/adicionar: Manipula a adi\u00e7\u00e3o de um novo grupo a uma turma. Hist\u00f3ria do usu\u00e1rio 3: Como um administrador, eu quero editar grupos, essas devem ser associado a uma turma. Frontend Template HTML para Gerenciamento de um grupo: editar_grupo.html conter\u00e1 as informa\u00e7\u00f5es do grupo selecionado Pode levar a visualiza\u00e7\u00e3o das notas do aluno. Backend: M\u00f3dulo gerenciador_grupo.py com fun\u00e7\u00f5es para adicionar alunos pr\u00e9-existente, excluir aluno do grupo e editar qual turma esse grupo est\u00e1 associado. Rotas de API: /api/grupos/editar/{id}: Manipula para editar grupos. Hist\u00f3ria de Usu\u00e1rio 4: Como administrador, quero excluir os grupos fFrontend: Template HTML para visualiza\u00e7\u00e3o de grupos: visualizacar_grupos.html que conter\u00e1 todos os grupos j\u00e1 criados com \u00edcone de edi\u00e7\u00e3o e de exclus\u00e3o em cada um deles. O \u00edcone deve acionar a a\u00e7\u00e3o de excluir Backend: M\u00f3dulo gerenciador_grupos.py com fun\u00e7\u00f5es para excluir o aluno selecionado. Rotas de API: /api/grupos/excluir/{id}: Manipula a listagem de grupos, excluindo o selecionado. \u00c9pico 4: Gerenciamento de Alunos Hist\u00f3ria de Usu\u00e1rio 1: Como um administrador, eu quero listar alunos existentes. Frontend Template HTML para listar Alunos: gerenciamento_alunos.html que conter\u00e1 um buscador e uma lista de alunos existentes, com bot\u00e3o para edi\u00e7\u00e3o e de exclus\u00e3o, e hiperlink para as notas do aluno Backend M\u00f3dulo gerenciador_alunos.py com fun\u00e7\u00f5es para listar um aluno. Rotas de API: /api/alunos/listar: Manipula a adi\u00e7\u00e3o de um novo aluno. Hist\u00f3ria de Usu\u00e1rio 2: Como um administrador, eu quero adicionar um novo aluno com informa\u00e7\u00f5es pessoais e matr\u00edcula Frontend Template HTML para Adicionar Alunos: gerenciamento_alunos.html que conter\u00e1 o formul\u00e1rio para adicionar um novo aluno Backend M\u00f3dulo gerenciador_alunos.py com fun\u00e7\u00f5es para adicionar um aluno. Rotas de API: /api/alunos/adicionar: Manipula a adi\u00e7\u00e3o de um novo aluno. Hist\u00f3ria de Usu\u00e1rio 3: Como um administrador, eu quero editar as informa\u00e7\u00f5es de um aluno existente. Frontend: Template HTML para editar aluno: edicao_alunos.html que conter\u00e1 o formul\u00e1rio para adicionar um novo aluno Backend: M\u00f3dulo gerenciador_alunos.py com fun\u00e7\u00f5es para atualizar(editar) informa\u00e7\u00f5es de alunos. Rotas de API: /api/alunos/atualizar/{id}: Manipula a atualiza\u00e7\u00e3o das informa\u00e7\u00f5es de um aluno espec\u00edfico. Hist\u00f3ria de Usu\u00e1rio 4: Como um administrador, eu quero excluir alunos. Frontend: Template HTML para editar aluno : gerenciamento_alunos.html que um bot\u00e3o para exclus\u00e3o do aluno Backend: M\u00f3dulo gerenciador_alunos.py com fun\u00e7\u00f5es para excluir alunos. Rotas de API: /api/alunos/excluir/{id}: Manipula a atualiza\u00e7\u00e3o das informa\u00e7\u00f5es de um aluno espec\u00edfico. \u00c9pico 5: Gerenciamento de Ciclos de Entrega e Scores Hist\u00f3ria de Usu\u00e1rio 1: Como um administrador, eu quero visualizar(listar) as notas de um aluno. Preciso criar um campo para exibir o FEE total e parcial. Qual o c\u00e1lculo do FEE? FEE = ((Score do Ciclo de Entrega 1 (C1) * Peso de C1) + ... + (Score do Ciclo de Entrega N (CN) * Peso de CN)) / Soma dos Pesos de C Frontend: Template HTML para Gerenciamento de Ciclos de Entrega: gerenciamento_ciclos.html que conter\u00e1 o aluno, as turmas que est\u00e3o matriculadas e as respectivas novas. Backend: M\u00f3dulo gerenciador_ciclos.py com fun\u00e7\u00f5es para listar as turmas e as notas associadas aquele aluno. Rotas de API: /api/notas/listar/aluno/{id}: Manipula a lista de um novo ciclo de entrega Hist\u00f3ria de Usu\u00e1rio 2: Como um administrador, eu quero adicionar uma nova nota a um aluno. Frontend: Template HTML para Gerenciamento de Ciclos de Entrega: gerenciamento_ciclos.html que conter\u00e1 os formul\u00e1rios para criar uma nova nota associada a uma turma. Backend: M\u00f3dulo gerenciador_ciclos.py com fun\u00e7\u00f5es para criar nota associada a aluno e ao ciclo de entrega. Rotas de API: /api/notas/criar/turma/{id}: Manipula a cria\u00e7\u00e3o de um novo ciclo de entrega Hist\u00f3ria de Usu\u00e1rio 3: Como um administrador, eu quero editar as notas de entrega existente. Frontend: Template HTML para Gerenciamento de Ciclos de Entrega: editar_nota.html que conter\u00e1 os formul\u00e1rios para editar uma nota pr\u00e9-existente associada a uma turma. Backend: M\u00f3dulo gerenciador_ciclos.py com fun\u00e7\u00f5es para as notas de ciclos de entrega. Rotas de API: /api/nota/atualizar/{id}: Manipula a atualiza\u00e7\u00e3o da nota em uma determinada entrega espec\u00edfica. Hist\u00f3ria de Usu\u00e1rio 4: Como um administrador, eu quero excluir notas parciais para os alunos em rela\u00e7\u00e3o a um ciclo. Frontend: Template HTML para Gerenciamento de Ciclos de Entrega: gerenciamento_ciclos.html que conter\u00e1 um \u00edcone que deletar a nota de um aluno associado a um ciclo e uma turma. Backend: M\u00f3dulo gerenciador_ciclos.py com fun\u00e7\u00f5es para excluir as notas de ciclos de entrega. Rotas de API: /api/nota/excluir/{id}: Manipula a exclus\u00e3o de uma nota em uma determinada entrega espec\u00edfica. \u00c9pico 6: Configura\u00e7\u00f5es Globais Hist\u00f3ria de Usu\u00e1rio 1: Como um administrador, quero listar e ver os par\u00e2metros globais das turmas Frontend: Template HTML para Gerenciamento Global: gerenciamento_global.html que conter\u00e1 as turmas existentes com seus respectivos parametros globais. Todas devem conter seu bot\u00e3o de editar. Backend: Fun\u00e7\u00e3o para listar par\u00e2metros globais no m\u00f3dulo gerenciador_configuracoes.py Rota de API: /api/globalsettings/listar para manipular a atualiza\u00e7\u00e3o dos par\u00e2metros globais. Hist\u00f3ria de Usu\u00e1rio 2: Como um administrador, eu quero editar par\u00e2metros globais, como datas do per\u00edodo letivo. Frontend: Template HTML para Gerenciamento Global: gerenciamento_global.html que conter\u00e1 os formul\u00e1rios para atualizar os par\u00e2metros globais de cada turma. Backend: Fun\u00e7\u00e3o para atualizar par\u00e2metros globais no m\u00f3dulo gerenciador_configuracoes.py Rota de API :api/globalsettings/{id}/editar para manipular a atualiza\u00e7\u00e3o dos par\u00e2metros globais. \u00c9pico 7: Carregamento de Dados massivo Hist\u00f3ria de Usu\u00e1rio 1: Como um administrador, eu quero carregar informa\u00e7\u00f5es de alunos partir de arquivos. Frontend: Tela de index.html ter\u00e1 um bot\u00e3o para update para o carregamento do CSV Sugest\u00e3o ( bot\u00e3o que faz download de uma planilha padr\u00e3o de sugest\u00e3o para a importa\u00e7\u00e3o do CSV) Backend: M\u00f3dulo carregamento_dados.py com fun\u00e7\u00f5es para carregar informa\u00e7\u00f5es de alunos e scores a partir de um arquivo CSV. Fun\u00e7\u00e3o para autenticar o formato do CSV, ou seja, ver se est\u00e1 dentro dos padr\u00f5es. Fun\u00e7\u00e3o para realizar o cadastramento de cada um dos alunos. Rotas de API: /api/carregamento: Manipula o carregamento de dados a partir de arquivos. Persist\u00eancia de dados Rela\u00e7\u00e3o de Entidades Nessa rela\u00e7\u00e3o temos que um aluno pode estar matriculado em diferentes cursos, o aluno mateus tem duas listas de notas, uma para cada curso matriculado . Dessa forma ser\u00e1 poss\u00edvel fazer a m\u00e9dia e adquirir estat\u00edsticas de notas de diferentes cursos e turmas. Tabelas de banco de dados 1. Dados de Cursos: cursos (array): Cont\u00e9m informa\u00e7\u00f5es sobre os cursos dispon\u00edveis. id (inteiro): ID \u00fanico do curso. nome_curso (string): Nome do curso. professor (string): Nome do professor respons\u00e1vel pelo curso. qtd_sprint (inteiro): Quantidade de sprints associadas ao curso. turmas (array de inteiros): IDs das turmas relacionadas ao curso. 2. Dados de Turmas: turmas (array): Cont\u00e9m informa\u00e7\u00f5es sobre as turmas. id (int): ID \u00fanico da turma. id_curso (inteiro): ID do curso ao qual a turma est\u00e1 associada. nome_turma (string): Nome da turma. { \"turmas\" : [ { \"id\": 1, \"id_curso\": 1, \"nome_turma\" : \"Turma A\" }, { \"id\": 2, \"id_curso\": 2, \"nome_turma\" : \"Turma A\" } ] } 3. Dados de Grupos: id (int): ID \u00fanico do grupo. id_curso (inteiro): ID do curso ao qual o grupo est\u00e1 associado. id_turma (inteiro): ID da turma \u00e0 qual o grupo pertence. nome_grupo (string): Nome descritivo do grupo. alunos (array de inteiros): Uma lista de IDs de alunos que fazem parte deste grupo. { \"grupos\" : [ { \"id\": 1, \"id_curso\": 1, \"id_turma\": 1, \"nome_grupo\": \"Grupo A\", \"alunos\": [1,2] } { \"id\": 2, \"id_curso\": 2, \"id_turma\": 3, \"nome_grupo\": \"Grupo B\", \"alunos\": [3] } ] } 4. Dados de Alunos: alunos (array): Cont\u00e9m informa\u00e7\u00f5es sobre os alunos matriculados em cursos. id (int): ID \u00fanico do aluno. nome (string): Nome do aluno. cursos_id (array de inteiros): IDs dos cursos aos quais o aluno est\u00e1 matriculado. notas (array de objetos): Cont\u00e9m informa\u00e7\u00f5es sobre as notas do aluno em diferentes cursos e turmas. id_curso (inteiro): ID do curso relacionado \u00e0s notas. id_turma (inteiro): ID da turma relacionada \u00e0s notas. notas (array de n\u00fameros): Lista de notas obtidas pelo aluno no curso e turma espec\u00edficos. ffe (nulo ou qualquer outro valor): M\u00e9dia das notas. ```python { \"alunos\": [ { \"id\": 1, \"nome\": \"Mateus\", \"cursos_id\": [1, 3], \"notas\": [ { \"id_curso\": 1, \"id_turma\": 1, \"notas\": [5, 6.23, 10], \"ffe\": null }, { \"id_curso\": 3, \"id_turma\": 4, \"notas\": [5, 8], \"ffe\": null } ] } ] } ``` ** BACKLOG API (2\u00ba SPRINT): \u00c9pico 1: Gerenciamento de turma: Hist\u00f3ria de Usu\u00e1rio 1: Como um administrador, eu quero criar uma nova turma. Criar tela inicial que encaminhe para a administra\u00e7\u00e3o de um curso. Na tela deve aparecer os cursos cadastros e ter a op\u00e7\u00e3o de cadastrar novo curso. Para cadastrar um curso ser\u00e1 necess\u00e1rio no m\u00ednimo adicionar seu nome e o professor respons\u00e1vel. Criar valida\u00e7\u00e3o para que o nome do curso n\u00e3o seja repetido. Demais op\u00e7\u00f5es de curso s\u00e3o: quantidade de sprints e selecionar quantas turmas ele quer criar ( banco de dados = bdd ent\u00e3o bdd1, bdd2, ..., bdd5). Opera\u00e7\u00f5es CRUD (Create, Read, Update, Delete). Campo para procurar um curso existente. Hist\u00f3ria de Usu\u00e1rio 2: Como um administrador, eu quero adicionar uma turma. Criar tela de administra\u00e7\u00e3o de turmas. Na tela deve aparecer turmas cadastrar e ter a op\u00e7\u00e3o de cadastrar nova turma. Para cadastrar uma turma \u00e9 necess\u00e1rio escolher um curso. Opera\u00e7\u00f5es CRUD (Create, Read, Update, Delete) Campo para procurar uma turma existente. Teste para ver se o relacionamento entre o curso e a turma ent\u00e3o corretos. Hist\u00f3ria de Usu\u00e1rio 3: Como um administrador, eu quero adicionar um aluno a uma turma. Criar tela de administra\u00e7\u00e3o de alunos. Hist\u00f3ria de Usu\u00e1rio 4: Como um administrador, eu quero adicionar um aluno a um grupo. \u00c9pico 2: Rotas de API: Hist\u00f3ria de Usu\u00e1rio 1: Como administrador eu quero configurar meus cursos. Necess\u00e1rio criar as rotas para que o front end consiga fazer o croud Documentar as rotas e suas fun\u00e7\u00f5es","title":"Sprints"},{"location":"sprints/#epicos","text":"Exporta\u00e7\u00e3o de Dados (Back-end) : A consolida\u00e7\u00e3o e exporta\u00e7\u00e3o de dados costumam ser tarefas realizadas no back-end, pois envolvem o processamento e a prepara\u00e7\u00e3o de dados para exporta\u00e7\u00e3o. Gerenciamento de Turmas (curso) : Esse \u00e9pico est\u00e1 relacionado \u00e0 cria\u00e7\u00e3o, atualiza\u00e7\u00e3o e visualiza\u00e7\u00e3o de turmas, que envolvem a interface do usu\u00e1rio para realizar essas opera\u00e7\u00f5es. Gerenciamento de grupo : Esse \u00e9pico est\u00e1 relacionado \u00e0 cria\u00e7\u00e3o, atualiza\u00e7\u00e3o e visualiza\u00e7\u00e3o de grupos, que envolvem a interface do usu\u00e1rio para realizar essas opera\u00e7\u00f5es. Gerenciamento de Alunos : Esse \u00e9pico lida com a adi\u00e7\u00e3o, atualiza\u00e7\u00e3o e visualiza\u00e7\u00e3o de informa\u00e7\u00f5es de alunos, bem como a adi\u00e7\u00e3o de notas parciais, todos os quais s\u00e3o intera\u00e7\u00f5es do usu\u00e1rio com a interface. Gerenciamento de Ciclos de Entrega e Scores: Este \u00e9pico envolve a cria\u00e7\u00e3o, atualiza\u00e7\u00e3o e visualiza\u00e7\u00e3o de ciclos de entrega e scores parciais, que s\u00e3o aspectos vis\u00edveis para o usu\u00e1rio. Visibilidade e Acompanhamento: Esse \u00e9pico visa fornecer informa\u00e7\u00f5es objetivas sobre turmas, grupos de alunos, etc. A apresenta\u00e7\u00e3o dessas informa\u00e7\u00f5es \u00e9 uma preocupa\u00e7\u00e3o do front-end. Configura\u00e7\u00f5es Globais (Back-end): Este \u00e9pico envolve a defini\u00e7\u00e3o de par\u00e2metros globais e o afeta o funcionamento do sistema. Essa configura\u00e7\u00e3o geralmente \u00e9 tratada no back-end. Importa\u00e7\u00e3o de Dados massivo (Back-end): A tarefa de carregar informa\u00e7\u00f5es de alunos e scores a partir de arquivos \u00e9 uma opera\u00e7\u00e3o que envolve o back-end, pois requer manipula\u00e7\u00e3o de dados.","title":"\u00c9picos"},{"location":"sprints/#detalhamento-dos-epicos","text":"","title":"Detalhamento dos \u00c9picos"},{"location":"sprints/#epico-1-exportacao-de-dados","text":"","title":"\u00c9pico 1: Exporta\u00e7\u00e3o de Dados"},{"location":"sprints/#historia-de-usuario-1-como-um-administrador-eu-quero-selecionar-as-opcoes-de-gerenciamento-e-relatorios-isso-envolve-a-exportacao-de-dados","text":"Frontend: - Bot\u00e3o no Index.html que gere relat\u00f3rios vindo dos: gerenciamento_turmas.html, gerenciamento_alunos.html, gerenciamento_ciclos.html, gerenciamento_global.html. Backend: - Rota da API - /api/relatorio/criar: Consolida os dados e exporta em formato PDF. - Consolida os dados e os exporta em formato PDF.","title":"Hist\u00f3ria de Usu\u00e1rio 1: Como um administrador, eu quero selecionar as op\u00e7\u00f5es de gerenciamento e relat\u00f3rios. Isso envolve a exporta\u00e7\u00e3o de dados."},{"location":"sprints/#epico-2-gerenciamento-de-turmas","text":"","title":"\u00c9pico 2: Gerenciamento de Turmas"},{"location":"sprints/#historia-de-usuario-1-como-um-administrador-eu-quero-visualizar-a-lista-de-turmas-disponiveis-seus-respectivos-grupos-com-os-alunos-e-alunos","text":"Frontend: Gerenciamento_turmas.html que conter\u00e1 todas as turmas j\u00e1 criadas com \u00edcone de edi\u00e7\u00e3o e de exclus\u00e3o em cada um deles. Dever\u00e1 ser criado um campo onde ser\u00e3o inseridas as turmas de forma din\u00e2mica. Bot\u00e3o para criar uma nova turma. Backend - M\u00f3dulo gerenciador_turmas.py com fun\u00e7\u00f5es para listar turmas. - Rotas de API: - /api/turmas/get: Retorna a lista de turmas dispon\u00edveis. - /api/turmas/delete: Deletar uma turma.","title":"Hist\u00f3ria de Usu\u00e1rio 1: Como um administrador, eu quero visualizar a lista de turmas dispon\u00edveis, seus respectivos grupos com os alunos e alunos."},{"location":"sprints/#historia-de-usuario-2-como-um-administrador-eu-quero-criar-uma-nova-turma-com-nome-da-turma-o-professor-e-a-associacao-de-grupos-pre-existentes-ou-nenhum-grupo-a-turma-nao-precisa-ser-criada-com-grupo-de-alunos-mas-precisa-poder-recebe-los-a-turma-so-sera-ativa-com-grupo-de-alunos-vinculados","text":"Frontend: - Template HTML para Gerenciamento de Turmas: - criar_turma.html que conter\u00e1 os formul\u00e1rios para criar uma nova turma. - A inclus\u00e3o de grupos de alunos n\u00e3o precisa ser obrigat\u00f3ria. - Nome da turma e professor s\u00e3o obrigat\u00f3rios. - Campo para procurar por um grupo pr\u00e9-existente - Campo para listar grupos Backend: M\u00f3dulo gerenciador_turmas.py com fun\u00e7\u00f5es para criar uma turma com/sem novo grupo de alunos. Rotas de API: /api/turmas/criar: Manipula a cria\u00e7\u00e3o de uma nova turma. /api/grupos /listar: Manipula a lista de grupos preexistente","title":"Hist\u00f3ria de Usu\u00e1rio 2: Como um administrador, eu quero criar uma nova turma com nome da turma, o professor e a associa\u00e7\u00e3o de grupos pr\u00e9-existentes ou nenhum grupo.  A turma n\u00e3o precisa ser criada com grupo de alunos, mas precisa poder receb\u00ea-los. A turma s\u00f3 ser\u00e1 ativa com grupo de alunos vinculados."},{"location":"sprints/#historia-de-usuario-3-como-um-administrador-eu-quero-editar-as-informacoes-de-uma-turma-e-adicionar-mais-grupos","text":"Template HTML para Gerenciamento de Turmas: editar_turmas.html que conter\u00e1 os formul\u00e1rios de edi\u00e7\u00e3o de uma nova turma, com possibilidade de ser levada a edi\u00e7\u00e3o de grupo e de criar novo grupo. M\u00f3dulo gerenciador_turmas.py com fun\u00e7\u00f5es para atualizar informa\u00e7\u00f5es de turma e editar grupo de alunos. Rotas de API: /api/turmas/atualizar/{id}: Manipula a atualiza\u00e7\u00e3o das informa\u00e7\u00f5es de uma turma espec\u00edfica. /api/grupos/atualizar/{id}: Manipula a atualiza\u00e7\u00e3o das informa\u00e7\u00f5es de um grupo de alunos espec\u00edfico.","title":"Hist\u00f3ria de Usu\u00e1rio 3: Como um administrador, eu quero editar as informa\u00e7\u00f5es de uma turma e adicionar mais  grupos."},{"location":"sprints/#historia-de-usuario-4-como-um-administrador-eu-quero-excluir-uma-turma-e-um-grupo-de-alunos","text":"Frontend: \u00cdcone de exclus\u00e3o do grupo M\u00f3dulo gerenciador_turmas.py com fun\u00e7\u00f5es para excluir turmas. Rotas de API: /api/turmas/excluir/{id}: Manipula a exclus\u00e3o de uma turma espec\u00edfica. /api/grupos/excluir/{id}: Manipula a exclus\u00e3o de um grupo espec\u00edfico. (Vamos excluir o grupo?)","title":"Hist\u00f3ria de Usu\u00e1rio 4: Como um administrador, eu quero excluir uma turma e um grupo de alunos."},{"location":"sprints/#_1","text":"\u00c9pico 3: Gerenciamento de grupos**","title":"**"},{"location":"sprints/#historia-de-usuario-1-como-administrador-quero-ver-todos-os-grupos-formados-e-associados-as-turmas","text":"Frontend: Template HTML para visualiza\u00e7\u00e3o de grupos: gerenciamento_grupos.html que conter\u00e1 todos os grupos j\u00e1 criados com \u00edcone de edi\u00e7\u00e3o e de exclus\u00e3o em cada um deles. Cada grupo deve apresentar seu nome e respectiva turma. Backend: M\u00f3dulo gerenciador_grupos.py com fun\u00e7\u00f5es para listar os grupos associados \u00e0s turmas. Rotas de API: /api/grupos/listar: Manipula a listagem de grupos.","title":"Hist\u00f3ria de Usu\u00e1rio 1: Como administrador, quero ver todos os grupos formados e associados \u00e0s turmas."},{"location":"sprints/#historia-do-usuario-2-como-um-administrador-eu-quero-criar-grupos-de-alunos-associado-a-uma-turma","text":"Frontend Template HTML para criar um grupo: criar_grupo.html que conter\u00e1 os formul\u00e1rios de cria\u00e7\u00e3o de um novo grupo Selecionar a qual turma ele pertencer\u00e1. Para adicionar um grupo \u00e9 necess\u00e1rio inserir o nome do grupo e a turma. Backend M\u00f3dulo gerenciador_grupo.py com fun\u00e7\u00f5es para adicionar pr\u00e9-existente, e associar esse grupo a uma turma. Rotas de API: /api/tumas/listas: Fazer a leitura das turmas existentes. /api/grupos/adicionar: Manipula a adi\u00e7\u00e3o de um novo grupo a uma turma.","title":"Hist\u00f3ria do usu\u00e1rio 2: Como um administrador, eu quero criar grupos de alunos associado a uma turma."},{"location":"sprints/#historia-do-usuario-3-como-um-administrador-eu-quero-editar-grupos-essas-devem-ser-associado-a-uma-turma","text":"Frontend Template HTML para Gerenciamento de um grupo: editar_grupo.html conter\u00e1 as informa\u00e7\u00f5es do grupo selecionado Pode levar a visualiza\u00e7\u00e3o das notas do aluno. Backend: M\u00f3dulo gerenciador_grupo.py com fun\u00e7\u00f5es para adicionar alunos pr\u00e9-existente, excluir aluno do grupo e editar qual turma esse grupo est\u00e1 associado. Rotas de API: /api/grupos/editar/{id}: Manipula para editar grupos.","title":"Hist\u00f3ria do usu\u00e1rio 3: Como um administrador, eu quero editar grupos, essas devem ser associado a uma turma."},{"location":"sprints/#historia-de-usuario-4-como-administrador-quero-excluir-os-grupos-ffrontend","text":"Template HTML para visualiza\u00e7\u00e3o de grupos: visualizacar_grupos.html que conter\u00e1 todos os grupos j\u00e1 criados com \u00edcone de edi\u00e7\u00e3o e de exclus\u00e3o em cada um deles. O \u00edcone deve acionar a a\u00e7\u00e3o de excluir Backend: M\u00f3dulo gerenciador_grupos.py com fun\u00e7\u00f5es para excluir o aluno selecionado. Rotas de API: /api/grupos/excluir/{id}: Manipula a listagem de grupos, excluindo o selecionado.","title":"Hist\u00f3ria de Usu\u00e1rio 4: Como administrador, quero excluir os grupos fFrontend:"},{"location":"sprints/#epico-4-gerenciamento-de-alunos","text":"","title":"\u00c9pico 4: Gerenciamento de Alunos"},{"location":"sprints/#historia-de-usuario-1-como-um-administrador-eu-quero-listar-alunos-existentes","text":"Frontend Template HTML para listar Alunos: gerenciamento_alunos.html que conter\u00e1 um buscador e uma lista de alunos existentes, com bot\u00e3o para edi\u00e7\u00e3o e de exclus\u00e3o, e hiperlink para as notas do aluno Backend M\u00f3dulo gerenciador_alunos.py com fun\u00e7\u00f5es para listar um aluno. Rotas de API: /api/alunos/listar: Manipula a adi\u00e7\u00e3o de um novo aluno.","title":"Hist\u00f3ria de Usu\u00e1rio 1: Como um administrador, eu quero listar alunos existentes."},{"location":"sprints/#historia-de-usuario-2-como-um-administrador-eu-quero-adicionar-um-novo-aluno-com-informacoes-pessoais-e-matricula","text":"Frontend Template HTML para Adicionar Alunos: gerenciamento_alunos.html que conter\u00e1 o formul\u00e1rio para adicionar um novo aluno Backend M\u00f3dulo gerenciador_alunos.py com fun\u00e7\u00f5es para adicionar um aluno. Rotas de API: /api/alunos/adicionar: Manipula a adi\u00e7\u00e3o de um novo aluno.","title":"Hist\u00f3ria de Usu\u00e1rio 2: Como um administrador, eu quero adicionar um novo aluno com informa\u00e7\u00f5es pessoais e matr\u00edcula"},{"location":"sprints/#historia-de-usuario-3-como-um-administrador-eu-quero-editar-as-informacoes-de-um-aluno-existente","text":"Frontend: Template HTML para editar aluno: edicao_alunos.html que conter\u00e1 o formul\u00e1rio para adicionar um novo aluno Backend: M\u00f3dulo gerenciador_alunos.py com fun\u00e7\u00f5es para atualizar(editar) informa\u00e7\u00f5es de alunos. Rotas de API: /api/alunos/atualizar/{id}: Manipula a atualiza\u00e7\u00e3o das informa\u00e7\u00f5es de um aluno espec\u00edfico.","title":"Hist\u00f3ria de Usu\u00e1rio 3: Como um administrador, eu quero editar as informa\u00e7\u00f5es de um aluno existente."},{"location":"sprints/#historia-de-usuario-4-como-um-administrador-eu-quero-excluir-alunos","text":"Frontend: Template HTML para editar aluno : gerenciamento_alunos.html que um bot\u00e3o para exclus\u00e3o do aluno Backend: M\u00f3dulo gerenciador_alunos.py com fun\u00e7\u00f5es para excluir alunos. Rotas de API: /api/alunos/excluir/{id}: Manipula a atualiza\u00e7\u00e3o das informa\u00e7\u00f5es de um aluno espec\u00edfico.","title":"Hist\u00f3ria de Usu\u00e1rio 4: Como um administrador, eu quero excluir alunos."},{"location":"sprints/#epico-5-gerenciamento-de-ciclos-de-entrega-e-scores","text":"","title":"\u00c9pico 5: Gerenciamento de Ciclos de Entrega e Scores"},{"location":"sprints/#historia-de-usuario-1-como-um-administrador-eu-quero-visualizarlistar-as-notas-de-um-aluno","text":"Preciso criar um campo para exibir o FEE total e parcial. Qual o c\u00e1lculo do FEE? FEE = ((Score do Ciclo de Entrega 1 (C1) * Peso de C1) + ... + (Score do Ciclo de Entrega N (CN) * Peso de CN)) / Soma dos Pesos de C Frontend: Template HTML para Gerenciamento de Ciclos de Entrega: gerenciamento_ciclos.html que conter\u00e1 o aluno, as turmas que est\u00e3o matriculadas e as respectivas novas. Backend: M\u00f3dulo gerenciador_ciclos.py com fun\u00e7\u00f5es para listar as turmas e as notas associadas aquele aluno. Rotas de API: /api/notas/listar/aluno/{id}: Manipula a lista de um novo ciclo de entrega","title":"Hist\u00f3ria de Usu\u00e1rio 1: Como um administrador, eu quero visualizar(listar) as notas de um aluno."},{"location":"sprints/#historia-de-usuario-2-como-um-administrador-eu-quero-adicionar-uma-nova-nota-a-um-aluno","text":"Frontend: Template HTML para Gerenciamento de Ciclos de Entrega: gerenciamento_ciclos.html que conter\u00e1 os formul\u00e1rios para criar uma nova nota associada a uma turma. Backend: M\u00f3dulo gerenciador_ciclos.py com fun\u00e7\u00f5es para criar nota associada a aluno e ao ciclo de entrega. Rotas de API: /api/notas/criar/turma/{id}: Manipula a cria\u00e7\u00e3o de um novo ciclo de entrega","title":"Hist\u00f3ria de Usu\u00e1rio 2: Como um administrador, eu quero adicionar uma nova nota a um aluno."},{"location":"sprints/#historia-de-usuario-3-como-um-administrador-eu-quero-editar-as-notas-de-entrega-existente","text":"Frontend: Template HTML para Gerenciamento de Ciclos de Entrega: editar_nota.html que conter\u00e1 os formul\u00e1rios para editar uma nota pr\u00e9-existente associada a uma turma. Backend: M\u00f3dulo gerenciador_ciclos.py com fun\u00e7\u00f5es para as notas de ciclos de entrega. Rotas de API: /api/nota/atualizar/{id}: Manipula a atualiza\u00e7\u00e3o da nota em uma determinada entrega espec\u00edfica.","title":"Hist\u00f3ria de Usu\u00e1rio 3: Como um administrador, eu quero editar as notas de entrega existente."},{"location":"sprints/#historia-de-usuario-4-como-um-administrador-eu-quero-excluir-notas-parciais-para-os-alunos-em-relacao-a-um-ciclo","text":"Frontend: Template HTML para Gerenciamento de Ciclos de Entrega: gerenciamento_ciclos.html que conter\u00e1 um \u00edcone que deletar a nota de um aluno associado a um ciclo e uma turma. Backend: M\u00f3dulo gerenciador_ciclos.py com fun\u00e7\u00f5es para excluir as notas de ciclos de entrega. Rotas de API: /api/nota/excluir/{id}: Manipula a exclus\u00e3o de uma nota em uma determinada entrega espec\u00edfica.","title":"Hist\u00f3ria de Usu\u00e1rio 4: Como um administrador, eu quero excluir notas parciais para os alunos em rela\u00e7\u00e3o a um ciclo."},{"location":"sprints/#epico-6-configuracoes-globais","text":"","title":"\u00c9pico 6: Configura\u00e7\u00f5es Globais"},{"location":"sprints/#historia-de-usuario-1-como-um-administrador-quero-listar-e-ver-os-parametros-globais-das-turmas","text":"Frontend: Template HTML para Gerenciamento Global: gerenciamento_global.html que conter\u00e1 as turmas existentes com seus respectivos parametros globais. Todas devem conter seu bot\u00e3o de editar. Backend: Fun\u00e7\u00e3o para listar par\u00e2metros globais no m\u00f3dulo gerenciador_configuracoes.py Rota de API: /api/globalsettings/listar para manipular a atualiza\u00e7\u00e3o dos par\u00e2metros globais.","title":"Hist\u00f3ria de Usu\u00e1rio 1: Como um administrador, quero listar e ver os par\u00e2metros globais das turmas"},{"location":"sprints/#historia-de-usuario-2-como-um-administrador-eu-quero-editar-parametros-globais-como-datas-do-periodo-letivo","text":"Frontend: Template HTML para Gerenciamento Global: gerenciamento_global.html que conter\u00e1 os formul\u00e1rios para atualizar os par\u00e2metros globais de cada turma. Backend: Fun\u00e7\u00e3o para atualizar par\u00e2metros globais no m\u00f3dulo gerenciador_configuracoes.py Rota de API :api/globalsettings/{id}/editar para manipular a atualiza\u00e7\u00e3o dos par\u00e2metros globais.","title":"Hist\u00f3ria de Usu\u00e1rio 2: Como um administrador, eu quero editar par\u00e2metros globais, como datas do per\u00edodo letivo."},{"location":"sprints/#epico-7-carregamento-de-dados-massivo","text":"","title":"\u00c9pico 7: Carregamento de Dados massivo"},{"location":"sprints/#historia-de-usuario-1-como-um-administrador-eu-quero-carregar-informacoes-de-alunos-partir-de-arquivos","text":"Frontend: Tela de index.html ter\u00e1 um bot\u00e3o para update para o carregamento do CSV Sugest\u00e3o ( bot\u00e3o que faz download de uma planilha padr\u00e3o de sugest\u00e3o para a importa\u00e7\u00e3o do CSV) Backend: M\u00f3dulo carregamento_dados.py com fun\u00e7\u00f5es para carregar informa\u00e7\u00f5es de alunos e scores a partir de um arquivo CSV. Fun\u00e7\u00e3o para autenticar o formato do CSV, ou seja, ver se est\u00e1 dentro dos padr\u00f5es. Fun\u00e7\u00e3o para realizar o cadastramento de cada um dos alunos. Rotas de API: /api/carregamento: Manipula o carregamento de dados a partir de arquivos.","title":"Hist\u00f3ria de Usu\u00e1rio 1: Como um administrador, eu quero carregar informa\u00e7\u00f5es de alunos partir de arquivos."},{"location":"sprints/#persistencia-de-dados","text":"","title":"Persist\u00eancia de dados"},{"location":"sprints/#relacao-de-entidades","text":"Nessa rela\u00e7\u00e3o temos que um aluno pode estar matriculado em diferentes cursos, o aluno mateus tem duas listas de notas, uma para cada curso matriculado . Dessa forma ser\u00e1 poss\u00edvel fazer a m\u00e9dia e adquirir estat\u00edsticas de notas de diferentes cursos e turmas. Tabelas de banco de dados 1. Dados de Cursos: cursos (array): Cont\u00e9m informa\u00e7\u00f5es sobre os cursos dispon\u00edveis. id (inteiro): ID \u00fanico do curso. nome_curso (string): Nome do curso. professor (string): Nome do professor respons\u00e1vel pelo curso. qtd_sprint (inteiro): Quantidade de sprints associadas ao curso. turmas (array de inteiros): IDs das turmas relacionadas ao curso. 2. Dados de Turmas: turmas (array): Cont\u00e9m informa\u00e7\u00f5es sobre as turmas. id (int): ID \u00fanico da turma. id_curso (inteiro): ID do curso ao qual a turma est\u00e1 associada. nome_turma (string): Nome da turma. { \"turmas\" : [ { \"id\": 1, \"id_curso\": 1, \"nome_turma\" : \"Turma A\" }, { \"id\": 2, \"id_curso\": 2, \"nome_turma\" : \"Turma A\" } ] } 3. Dados de Grupos: id (int): ID \u00fanico do grupo. id_curso (inteiro): ID do curso ao qual o grupo est\u00e1 associado. id_turma (inteiro): ID da turma \u00e0 qual o grupo pertence. nome_grupo (string): Nome descritivo do grupo. alunos (array de inteiros): Uma lista de IDs de alunos que fazem parte deste grupo. { \"grupos\" : [ { \"id\": 1, \"id_curso\": 1, \"id_turma\": 1, \"nome_grupo\": \"Grupo A\", \"alunos\": [1,2] } { \"id\": 2, \"id_curso\": 2, \"id_turma\": 3, \"nome_grupo\": \"Grupo B\", \"alunos\": [3] } ] } 4. Dados de Alunos: alunos (array): Cont\u00e9m informa\u00e7\u00f5es sobre os alunos matriculados em cursos. id (int): ID \u00fanico do aluno. nome (string): Nome do aluno. cursos_id (array de inteiros): IDs dos cursos aos quais o aluno est\u00e1 matriculado. notas (array de objetos): Cont\u00e9m informa\u00e7\u00f5es sobre as notas do aluno em diferentes cursos e turmas. id_curso (inteiro): ID do curso relacionado \u00e0s notas. id_turma (inteiro): ID da turma relacionada \u00e0s notas. notas (array de n\u00fameros): Lista de notas obtidas pelo aluno no curso e turma espec\u00edficos. ffe (nulo ou qualquer outro valor): M\u00e9dia das notas. ```python { \"alunos\": [ { \"id\": 1, \"nome\": \"Mateus\", \"cursos_id\": [1, 3], \"notas\": [ { \"id_curso\": 1, \"id_turma\": 1, \"notas\": [5, 6.23, 10], \"ffe\": null }, { \"id_curso\": 3, \"id_turma\": 4, \"notas\": [5, 8], \"ffe\": null } ] } ] } ```","title":"Rela\u00e7\u00e3o de Entidades"},{"location":"sprints/#backlog-api-2o-sprint","text":"","title":"**BACKLOG API (2\u00ba SPRINT):"},{"location":"sprints/#epico-1-gerenciamento-de-turma","text":"","title":"\u00c9pico 1: Gerenciamento de turma:"},{"location":"sprints/#historia-de-usuario-1-como-um-administrador-eu-quero-criar-uma-nova-turma","text":"Criar tela inicial que encaminhe para a administra\u00e7\u00e3o de um curso. Na tela deve aparecer os cursos cadastros e ter a op\u00e7\u00e3o de cadastrar novo curso. Para cadastrar um curso ser\u00e1 necess\u00e1rio no m\u00ednimo adicionar seu nome e o professor respons\u00e1vel. Criar valida\u00e7\u00e3o para que o nome do curso n\u00e3o seja repetido. Demais op\u00e7\u00f5es de curso s\u00e3o: quantidade de sprints e selecionar quantas turmas ele quer criar ( banco de dados = bdd ent\u00e3o bdd1, bdd2, ..., bdd5). Opera\u00e7\u00f5es CRUD (Create, Read, Update, Delete). Campo para procurar um curso existente.","title":"Hist\u00f3ria de Usu\u00e1rio 1: Como um administrador, eu quero criar uma nova turma."},{"location":"sprints/#historia-de-usuario-2-como-um-administrador-eu-quero-adicionar-uma-turma","text":"Criar tela de administra\u00e7\u00e3o de turmas. Na tela deve aparecer turmas cadastrar e ter a op\u00e7\u00e3o de cadastrar nova turma. Para cadastrar uma turma \u00e9 necess\u00e1rio escolher um curso. Opera\u00e7\u00f5es CRUD (Create, Read, Update, Delete) Campo para procurar uma turma existente. Teste para ver se o relacionamento entre o curso e a turma ent\u00e3o corretos.","title":"Hist\u00f3ria de Usu\u00e1rio 2: Como um administrador, eu quero adicionar uma turma."},{"location":"sprints/#historia-de-usuario-3-como-um-administrador-eu-quero-adicionar-um-aluno-a-uma-turma","text":"Criar tela de administra\u00e7\u00e3o de alunos.","title":"Hist\u00f3ria de Usu\u00e1rio 3: Como um administrador, eu quero adicionar um aluno a uma turma."},{"location":"sprints/#historia-de-usuario-4-como-um-administrador-eu-quero-adicionar-um-aluno-a-um-grupo","text":"","title":"Hist\u00f3ria de Usu\u00e1rio 4: Como um administrador, eu quero adicionar um aluno a um grupo."},{"location":"sprints/#epico-2-rotas-de-api","text":"","title":"\u00c9pico 2:  Rotas de API:"},{"location":"sprints/#historia-de-usuario-1-como-administrador-eu-quero-configurar-meus-cursos","text":"Necess\u00e1rio criar as rotas para que o front end consiga fazer o croud Documentar as rotas e suas fun\u00e7\u00f5es","title":"Hist\u00f3ria de Usu\u00e1rio 1: Como administrador eu quero configurar meus cursos."}]}